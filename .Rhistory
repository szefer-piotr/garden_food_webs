fselbioins$anova
fselbioins$call # formula
fselbioins$call$formula
finalHerbRDA <- rda(fselbioins$call$formula,
data = treats_pc)
anova(finalHerbRDA)
anova(finalHerbRDA, by="terms")
# biplot(pPCA, choices=c(2,10), scaling=3)
# text(pPCA, display="species", choices=c(2,10), scaling=3)
# BIRD EFFECT ----
biomat_bef <- biomat[treats_trimmed$sites, ]
abumat_bef <- abumat[treats_trimmed$sites, ]
rda_bio <-rda(biomat_bef ~ treat+Condition(block+PC4),data=treats_pc)
rda_abu <-rda(abumat_bef ~ treat+Condition(block+PC4),data=treats_pc)
# Bird effect only
rda_biob <-rda(biomat_bef ~ birdef+Condition(block+PC4),data=treats_pc)
rda_abub <-rda(abumat_bef ~ birdef+Condition(block+PC4),data=treats_pc)
rdatoplot <- rda_bio
anova(rdatoplot)
anova(rdatoplot, by="axis")
anova(rdatoplot, by="terms")
RsquareAdj(rdatoplot)
herbnames <- rownames(rdatoplot$CCA$v)
colors <- rep("forestgreen", length(herbnames))
colors[grep("aran|mant", herbnames)] <- "red"
pchar <- colors
plot(rdatoplot, scaling=3, display="species", type="n")
points(rdatoplot, scaling=3, display="species", pch=4, cex = 0.8,
col = colors)
# text(rda_abu, display = "bp")
# text(rdatoplot, display = "bp", scaling = 3)
# text(rdatoplot, display = "species", scaling = 3)
points(rdatoplot, display = "cn", scaling = 3, col="red")
text(rdatoplot, display = "cn", scaling = 3, col="red")
cntvals <- rdatoplot$CCA$centroids
x1 <- cntvals[2,1]
y1 <- cntvals[2,2]
x2 <- cntvals[3,1]
y2 <- cntvals[3,2]
x3 <- cntvals[4,1]
y3 <- cntvals[4,2]
centroid <- c((x1+x2+x3)/3,(y1+y2+y3)/3)
c_control <- c(cntvals[1,1], cntvals[1,2])
arrows(c_control[1], c_control[2], centroid[1],centroid[2],
length = 0.1)
# Which insects best fit the rda model (no factors)
colnames(abumat_trimmed)
sp_fitsa <- envfit(rdatoplot, abumat_trimmed)
sig_arth <- sp_fitsa$vectors$pvals
r2_arth <- sp_fitsa$vectors$r
# plot(sort(r2_arth, decreasing = T))
# there are only few significanlty affected herbivores
# r2 of these might be used in weighted regression as these bring more information
# than nonsignificant ones
names(r2_arth[names(sig_arth[sig_arth <= 0.05] )])
names(r2_arth[r2_arth >= 0.2363755])
# Find projection of points on predator effect axis
# Calculate projection on bird effect axis ----
library(LearnGeom)
predEff <- CreateLinePoints(c_control, centroid)
vec <- c_control
# standardized u
theta <- atan(vec[2]/vec[1]) # in radians
par(mfrow=c(1,2))
herbpoints <- rdatoplot$CCA$v[,c(1,2)]
# plot(herbpoints)
# abline(0,0.5200527)
# abline(h=0, lty=2)
# abline(v=0, lty=2)
Rmat <- matrix(c(cos(theta), -sin(theta),
sin(theta),  cos(theta)),
byrow=T, nrow=2)
hp_rot <- herbpoints %*%  Rmat
# plot(hp_rot)
# abline(0,0.5200527)
# abline(h=0, lty=2)
# abline(v=0, lty=2)
projection_on_predef <- hp_rot[,1]
# Predator effect axis vs PDI----
vals <- projection_on_predef
summary(vals)
qts <- quantile(vals, c(0.375,0.625))
# hist(vals,breaks = 50)
# abline(v=qts[1], lty= 2, col=2)
# abline(v=qts[2], lty= 2, col=2)
names(sp_fitsa$vectors$pvals)[sp_fitsa$vectors$pvals <= 0.05]
neutral <- vals[vals<=qts[2] & vals>=qts[1]]
positive <- vals[vals>qts[2]]
negative <- vals[vals<qts[1]]
length(vals)
length(neutral)
length(positive)
length(negative)
source("code/pdi.R")
# highest for cole009
pdimat[, "cole009"]
pdimat[, "lepi073"]
db <- diet_breadth
db <- db[db > 0]
db[db == min(db)]
# only 14 herbivore abundances are significantly
# Why is the length of PDI different from length of herbivore progjections
# from pRDA
names(diet_breadth)
dim(pdimat) #data is the same
names(vals)
# subsample from pdi db values
diet_breadth_df <- data.frame(pdi = diet_breadth,
bef = vals[names(diet_breadth)])
diet_breadth_df$herbivores <- rownames(diet_breadth_df)
diet_breadth_df$birdef <- "neutral"
diet_breadth_df[diet_breadth_df$herbivores %in% names(positive), ]$birdef <- "positive"
diet_breadth_df[diet_breadth_df$herbivores %in% names(negative), ]$birdef <- "negative"
library(ggplot2)
library(AER)
library(blmeco)
library(emmeans)
library(multcomp)
# Insted of total ammount of food plants o could calculate PDI!!!
dbdf <- diet_breadth_df
dbdf$lpdi <- log(dbdf$pdi)
dbdf <- dbdf[dbdf$pdi != 0, ]
lm1 <- lm(lpdi~birdef, dbdf)
plot(lm1) # pretty good model
# I am going to log them anyway to better visualize
# ggplot(dbdf, aes(x = birdef, y = log(pdi)))+
#   geom_jitter(width = 0.1, col = rgb(0,0,0,50,maxColorValue = 255))+
#   stat_summary(fun.y = mean, geom = "point", col= "red")+
#   stat_summary(fun.data = "mean_cl_boot",
#                geom = "errorbar",
#                width=0.05, col="red", lwd=1.1)+
#   ggtitle("H")
# DIET SWITCHING ----
# Herbivores present in P and C treatments
predsites <- treats[treats$treat == "PREDATOR",]$codes
contsites <- treats[treats$treat == "CONTROL",]$codes
ips <- grep("aran|mant", ins_bio$morphotype)
ins_bioOrig <- ins_bioins_bio <- ins_bio[-ips, ]
pabumat <- contingencyTable2(ins_bio[(ins_bio$plot %in% predsites), ],
"plot","morphotype","amount")
pbiomat <- contingencyTable2(ins_bio[ins_bio$plot %in% predsites, ],
"plot","morphotype","totbio")
cabumat <- contingencyTable2(ins_bio[ins_bio$plot %in% contsites, ],
"plot","morphotype","amount")
cbiomat <- contingencyTable2(ins_bio[ins_bio$plot %in% contsites, ],
"plot","morphotype","totbio")
comparable <- colnames(cbiomat)[colnames(cbiomat) %in% colnames(pbiomat)]
# Remove intermediate predators
comparable
# Food plants for comparable herbivores
cp_treats <- treats_trimmed[treats_trimmed$treat %in% c("CONTROL","PREDATOR"),]$sites
csites <- treats_trimmed[treats_trimmed$treat %in% c("CONTROL"),]$sites
psites <- treats_trimmed[treats_trimmed$treat %in% c("PREDATOR"),]$sites
ins_bio_cp <- ins_bio[ins_bio$plot %in% cp_treats, ]
ins_bio_cp_comparable <- ins_bio_cp[ins_bio_cp$morphotype %in% comparable,]
ibc <- ins_bio_cp_comparable
ibc <- ibc[complete.cases(ibc),]
ccompFood <- contingencyTable2(ibc[ibc$plot %in% csites, ],
"tree",
"morphotype",
"totbio")
pcompFood <- contingencyTable2(ibc[ibc$plot %in% psites, ],
"tree",
"morphotype",
"totbio")
dim(pcompFood)
dim(ccompFood)
pcompFood
# Combine dataset
rownames(pcompFood) <- paste("p", rownames(pcompFood), sep="_")
rownames(ccompFood) <- paste("c", rownames(ccompFood), sep="_")
compFood <- rbind(pcompFood,ccompFood)
compFood
envdat <- data.frame(treat = rep(c("predator", "control"),
c(dim(pcompFood)[1],
dim(ccompFood)[1])))
rownames(envdat) <- rownames(compFood)
dietrda <- rda(compFood~treat, data=envdat)
anova(dietrda, by="axis")
plot(dietrda)
compFood[,1]
row <- 2
compFood[,row]
compvec <- compFood[,row]
grep("p_", names(compvec))
cont <- grep("c_", names(compvec))
cont
cbind(compvec[pred],
compvec[cont])
pred <- grep("p_", names(compvec))
cont <- grep("c_", names(compvec))
cbind(compvec[pred],
compvec[cont])
compDF <- data.frame(pred = compvec[pred],
cont = compvec[cont])
compvec[pred]
compvec[cont]
compDF <- as.data.frame(rbind(compvec[pred],
cont = compvec[cont]))
rbind(compvec[pred],
cont = compvec[cont])
compDF <- as.data.frame(cbind(compvec[pred],
cont = compvec[cont]))
cbind(compvec[pred],
compvec[cont])
compvec[pred]
compvec[cont]
# Resource switching
rm(list=ls())
source("code/data_processing_code.R")
source("code/pdi.R")
ins_bio$block <- substr(ins_bio$plot, 3,4)
treats$treat <- tolower(treats$treat)
treats$block <- substr(treats$codes, 3,4)
# predator vs control
cpsites <- as.character(treats[treats$treat %in% c("control",
"predator"),]$codes)
cpfull <- ins_bio[ins_bio$plot %in% cpsites, ]
# remove ip
cpfull_noip <- cpfull[-grep("aran|mant", cpfull$morphotype), ]
cpfull_noip$morphotype <- as.character(cpfull_noip$morphotype)
# For each block get species which are comparable
bl <- "g1"
slgfulldat <- data.frame()
for(bl in unique(cpfull_noip$block)){
subbl <- cpfull_noip[cpfull_noip$block == bl,]
psite <- treats[treats$block == bl & treats$treat == "predator", ]$codes
csite <- treats[treats$block == bl & treats$treat == "control", ]$codes
psite <- as.character(psite)
csite <- as.character(csite)
pdat <- subbl[subbl$plot == psite, ]
cdat <- subbl[subbl$plot == csite, ]
pmat <- contingencyTable2(pdat, "tree", "morphotype", "totbio")
cmat <- contingencyTable2(cdat, "tree", "morphotype", "totbio")
#stayed
stayed <- colnames(cmat)[colnames(cmat) %in% colnames(pmat)]
#lost
`%notin%` <- Negate(`%in%`)
lost <- colnames(cmat)[colnames(cmat) %notin% colnames(pmat)]
#gained
gained <- colnames(pmat)[colnames(pmat) %notin% colnames(cmat)]
allnames <- length(unique(c(colnames(pmat), colnames(cmat))))
length(c(stayed, lost, gained)) == allnames # do we have all of them?
# pdi
staydf <- data.frame(pdi = diet_breadth[stayed],
type = "stayed")
lostdf <- data.frame(pdi = diet_breadth[lost],
type = "lost")
gainedf <- data.frame(pdi = diet_breadth[gained],
type = "gained")
slgdat <- rbind(staydf, lostdf, gainedf)
slgdat$block <- bl
slgfulldat <- rbind(slgfulldat, slgdat)
}
slgfulldat
dim(slgfulldat)
slgfullnozero <- slgfulldat[slgfulldat$pdi != 0, ]
dim(slgfullnozero)
# Weighted lratio of individual species change vs PDI ----
compdf <- data.frame()
for(bl in unique(treats$block)){
subbl <- cpfull_noip[cpfull_noip$block == bl,]
psite <- treats[treats$block == bl & treats$treat == "predator", ]$codes
csite <- treats[treats$block == bl & treats$treat == "control", ]$codes
pn <- gardnets[[psite]]
cn <- gardnets[[csite]]
mtnms <- colnames(cn)[colnames(cn) %in% colnames(pn)]
ratios <- colSums(pn[,mtnms])/colSums(cn[,mtnms])
dbs <- diet_breadth[mtnms]
plot(log(ratios)~dbs)
bldf <- data.frame(spec = mtnms, ratio = ratios, pdi = dbs, block = bl)
compdf <- rbind(compdf, bldf)
}
compdf_niop <- compdf[-grep("aran|mant", compdf$spec), ]
library(lme4)
library(lmerTest)
# weights
ins_bio$morphotype <- as.character(ins_bio$morphotype)
morphbios  <- tapply(ins_bio$totbio, ins_bio$morphotype, sum, na.rm=T)
compdf_niop$bio <- morphbios[compdf_niop$spec]
library(RColorBrewer)
library(ggplot2)
dotcols <- brewer.pal(6, "BrBG")
dotcols <- alpha(dotcols, 0.5)
compdf_niop$lratio <- log(compdf_niop$ratio)
compdf_niop$alratio <- abs(compdf_niop$lratio)
# PDI and lratio ----
plot(lratio~pdi, data = compdf_niop,
pch = 19, col = block, cex = log(compdf_niop$bio*10))
lmer1 <- lmer(lratio~pdi+(1|block),
data = compdf_niop,
weights = bio)
sl <- summary(lmer1)
abline(sl$coefficients[1,1],
sl$coefficients[2,1], lwd = 3,  col = alpha("black", 0.5))
abline(h=0,col = alpha("black", 0.5), lty = 2)
# plot
library(ggplot2)
gray <- rgb(0,0,0,50,maxColorValue = 255)
ggplot(slgfullnozero, aes(x = type, y = pdi,
color = ))+
geom_jitter(width = 0.1, color = gray, pch=19) +
stat_summary(fun = mean, geom = "point", col= "red")+
stat_summary(fun.data = "mean_cl_boot",
geom = "errorbar",
width=0.05, col="red", lwd=1.1)
# There is no difference in PDI for species lost, gained or stayed in the plot
library(lme4)
library(lmerTest)
library(emmeans)
ins_bio$morphplot <- paste(ins_bio$morphotype,
ins_bio$plot, sep="")
rownames(ins_bio) <- ins_bio$morphotype
slgfullnozero$abundance <- ins_bio
lmer1 <-(lmer(pdi~type+(1|block), slgfullnozero))
inter.test1 <- emmeans(lmer1, "type")
# plot(inter.test1)
# PDI vs ABUNDANCE ----
# Were species with high PD more abundnat?
diet_breadth
diet_breadth["orth024"]
abund <- ins_bio[, c("morphotype","totbio")]
abund$morphotype <- as.character(abund$morphotype)
abund$db <- diet_breadth[abund$morphotype]
abund_noip <- abund[-grep("aran|mant", abund$morphotype), ]
anip <- abund_noip[!is.na(abund_noip$db) & abund_noip$db != 0,]
plot(totbio~db ,
anip,
pch=19, col = gray,
xlab = "PDI", ylab="Biomass")
library(MASS)
glm1 <- glm(totbio~db, anip, family = gaussian(link="log"))
summary(glm1)
ndat <- data.frame(db = seq(0,3.5,by=0.01))
res <- predict(glm1, newdata = ndat,
type = "response",
se.fit = T)
lines(res$fit~ndat$db, lwd =2, col = "red")
library(blmeco)
dispersion_glmer(glm1)
summary(glm1)
# 2.Calculate distances between diets
pdimat
rm(list=ls())
source("code/data_processing_code.R")
source("code/pdi.R")
ins_bio$block <- substr(ins_bio$plot, 3,4)
treats$treat <- tolower(treats$treat)
treats$block <- substr(treats$codes, 3,4)
# predator vs control
cpsites <- as.character(treats[treats$treat %in% c("control",
"predator"),]$codes)
cpfull <- ins_bio[ins_bio$plot %in% cpsites, ]
# remove ip
cpfull_noip <- cpfull[-grep("aran|mant", cpfull$morphotype), ]
cpfull_noip$morphotype <- as.character(cpfull_noip$morphotype)
# For each block get species which are comparable
bl <- "g1"
slgfulldat <- data.frame()
for(bl in unique(cpfull_noip$block)){
subbl <- cpfull_noip[cpfull_noip$block == bl,]
psite <- treats[treats$block == bl & treats$treat == "predator", ]$codes
csite <- treats[treats$block == bl & treats$treat == "control", ]$codes
psite <- as.character(psite)
csite <- as.character(csite)
pdat <- subbl[subbl$plot == psite, ]
cdat <- subbl[subbl$plot == csite, ]
pmat <- contingencyTable2(pdat, "tree", "morphotype", "totbio")
cmat <- contingencyTable2(cdat, "tree", "morphotype", "totbio")
#stayed
stayed <- colnames(cmat)[colnames(cmat) %in% colnames(pmat)]
#lost
`%notin%` <- Negate(`%in%`)
lost <- colnames(cmat)[colnames(cmat) %notin% colnames(pmat)]
#gained
gained <- colnames(pmat)[colnames(pmat) %notin% colnames(cmat)]
allnames <- length(unique(c(colnames(pmat), colnames(cmat))))
length(c(stayed, lost, gained)) == allnames # do we have all of them?
# pdi
staydf <- data.frame(pdi = diet_breadth[stayed],
type = "stayed")
lostdf <- data.frame(pdi = diet_breadth[lost],
type = "lost")
gainedf <- data.frame(pdi = diet_breadth[gained],
type = "gained")
slgdat <- rbind(staydf, lostdf, gainedf)
slgdat$block <- bl
slgfulldat <- rbind(slgfulldat, slgdat)
}
slgfulldat
dim(slgfulldat)
slgfullnozero <- slgfulldat[slgfulldat$pdi != 0, ]
dim(slgfullnozero)
compdf <- data.frame()
for(bl in unique(treats$block)){
subbl <- cpfull_noip[cpfull_noip$block == bl,]
psite <- treats[treats$block == bl & treats$treat == "predator", ]$codes
csite <- treats[treats$block == bl & treats$treat == "control", ]$codes
pn <- gardnets[[psite]]
cn <- gardnets[[csite]]
mtnms <- colnames(cn)[colnames(cn) %in% colnames(pn)]
ratios <- colSums(pn[,mtnms])/colSums(cn[,mtnms])
dbs <- diet_breadth[mtnms]
plot(log(ratios)~dbs)
bldf <- data.frame(spec = mtnms, ratio = ratios, pdi = dbs, block = bl)
compdf <- rbind(compdf, bldf)
}
compdf_niop <- compdf[-grep("aran|mant", compdf$spec), ]
library(lme4)
library(lmerTest)
# weights
ins_bio$morphotype <- as.character(ins_bio$morphotype)
morphbios  <- tapply(ins_bio$totbio, ins_bio$morphotype, sum, na.rm=T)
compdf_niop$bio <- morphbios[compdf_niop$spec]
library(RColorBrewer)
library(ggplot2)
dotcols <- brewer.pal(6, "BrBG")
dotcols <- alpha(dotcols, 0.5)
compdf_niop$lratio <- log(compdf_niop$ratio)
compdf_niop$alratio <- abs(compdf_niop$lratio)
# PDI and lratio ----
plot(lratio~pdi, data = compdf_niop,
pch = 19, col = block, cex = log(compdf_niop$bio*10))
lmer1 <- lmer(lratio~pdi+(1|block),
data = compdf_niop,
weights = bio)
sl <- summary(lmer1)
abline(sl$coefficients[1,1],
sl$coefficients[2,1], lwd = 3,  col = alpha("black", 0.5))
abline(h=0,col = alpha("black", 0.5), lty = 2)
# plot
library(ggplot2)
gray <- rgb(0,0,0,50,maxColorValue = 255)
ggplot(slgfullnozero, aes(x = type, y = pdi,
color = ))+
geom_jitter(width = 0.1, color = gray, pch=19) +
stat_summary(fun = mean, geom = "point", col= "red")+
stat_summary(fun.data = "mean_cl_boot",
geom = "errorbar",
width=0.05, col="red", lwd=1.1)
# There is no difference in PDI for species lost, gained or stayed in the plot
library(lme4)
library(lmerTest)
library(emmeans)
ins_bio$morphplot <- paste(ins_bio$morphotype,
ins_bio$plot, sep="")
rownames(ins_bio) <- ins_bio$morphotype
slgfullnozero$abundance <- ins_bio
lmer1 <-(lmer(pdi~type+(1|block), slgfullnozero))
inter.test1 <- emmeans(lmer1, "type")
ggplot(slgfullnozero, aes(x = type, y = pdi,
color = ))+
geom_jitter(width = 0.1, color = gray, pch=19) +
stat_summary(fun = mean, geom = "point", col= "red")+
stat_summary(fun.data = "mean_cl_boot",
geom = "errorbar",
width=0.05, col="red", lwd=1.1)
gray <- rgb(0,0,0,50,maxColorValue = 255)
ggplot(slgfullnozero, aes(x = type, y = pdi,
color = ))+
geom_jitter(width = 0.1, color = gray, pch=19) +
stat_summary(fun = mean, geom = "point", col= "red")+
stat_summary(fun.data = "mean_cl_boot",
geom = "errorbar",
width=0.05, col="red", lwd=1.1)
slgfullnozero
# PDI and lratio ----
plot(lratio~pdi, data = compdf_niop,
pch = 19, col = block, cex = log(compdf_niop$bio*10))
lmer1 <- lmer(lratio~pdi+(1|block),
data = compdf_niop,
weights = bio)
sl <- summary(lmer1)
sl
predict(lmer1)
lmer1
compdf_niop
compdf_niop
min(compdf_niop$pdi)
# Need to add confidence intervals
newdata(pdi = seq(min(compdf_niop$pdi), max(compdf_niop$pdi)), by=0.001)
# Need to add confidence intervals
newdata = data.frame(pdi = seq(min(compdf_niop$pdi), max(compdf_niop$pdi)), by=0.001)
newdata
# Need to add confidence intervals
newdata = data.frame(pdi = seq(min(compdf_niop$pdi), max(compdf_niop$pdi), by=0.001))
newdata
# Need to add confidence intervals
pdiseq <- seq(min(compdf_niop$pdi), max(compdf_niop$pdi), by=0.001)
blocks <- unique(compdf_niop$block)
blocks
newdata = expand.grid(blocks, pdiseq)
newdata
newdata = expand.grid(pdi = pdiseq, block = blocks)
newdata
?predict
predict(lmer1, newdata)
newdata$lratio <- predict(lmer1, newdata)
plot(lratio~pdi, newdata)
pnd <- predict(lmer1, newdata)
pnd
names(pnd)
dim(pnd)
pnd <- predict(lmer1, newdata, interval = 'confidence')
pnd <- predict(lmer1, newdata=newdata, interval='confidence')
pnd <- predict(lmer1, newdata=newdata, interval='prediction')
lmer1
library(merTools)
install.packages("merTools")
install.packages("merTools")
library(merTools)
preds <- predictInterval(lmer1, newdata = newdata, n.sims = 999)
