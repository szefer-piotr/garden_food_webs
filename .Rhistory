subblpl$nms <- as.character(subblpl$nms)
subpllr <- tapply(subblpl$plbio, subblpl$trt, mean)
pltlr <- log(subpllr["CONTROL"]/subpllr["PREDATOR"])
if(is.na(pltlr)){next}
arthrodf <- data.frame()
print(plnt)
for(fam in unique(subblpl$nms)){
famsub <- subblpl[subblpl$nms == fam, c("bio","trt")]
cont <- famsub[famsub$trt == "CONTROL",]$bio
pred <- famsub[famsub$trt == "PREDATOR",]$bio
famlr <- log(cont/pred)
if(length(famlr) == 0){next}
print(fam)
print(famlr)
arthrodf<- rbind(arthrodf, data.frame(plnt=plnt,fam=fam, lr=famlr,
pltlr=pltlr, gard=block))
}
}
logratiodf <- rbind(logratiodf, arthrodf)
}
logratiodf
logratiodf <- logratiodf[!(is.nan(logratiodf$lr) | is.infinite(logratiodf$lr)), ]
# Biomasses (from the control plots) for each fam and tree
logratiodf$gard <- as.character(logratiodf$gard)
logratiodf$plnt <- as.character(logratiodf$plnt)
logratiodf$fam <- as.character(logratiodf$fam)
biosize <- data.frame()
for(row in 1:dim(logratiodf)[1]){
loc <- c(logratiodf[row,]$gard,
logratiodf[row,]$plnt,
logratiodf[row,]$fam)
bcpc <- biollcp[biollcp$trt == "CONTROL",]
bio <- bcpc[(bcpc$gard == loc[1] & bcpc$plnm == loc[2] &
bcpc$nms == loc[3]),]$bio
biosize <- rbind(biosize, data.frame(garrd = loc[1],
plnt = loc[2],
fam = loc[3],
bio = bio))
}
biosize
logratiodf$size <- biosize$bio
library(ggplot2)
p <- ggplot(logratiodf,
aes(x = lr, y = pltlr, label = fam, color=plnt))
p + coord_cartesian(xlim=c(-5,5), ylim = c(-5,5)) +
geom_jitter(size=logratiodf$size, width=0.5) +
geom_text() +
geom_abline(slope = 1, intercept = 0, linetype="dashed") +
geom_abline(slope = -1, intercept = 0,linetype="dashed") +
xlab("Direct effect of predator removal on insects") +
ylab("Indirect effect of predator removal on plants")
ib_slice <- ins_bio[(ins_bio$plot == "w1g1p1" & ins_bio$family == "orth"),
c("amount", "bio")]
plot(ib_slice$amount)
plot(ib_slice$bio)
plot(ib_slice$amount ~ log(ib_slice$bio)) #seems normally dist. for log(bio)
# General agregeated results for the log ratios for various insect groups
# comptrt <- "FUNGICIDE"
comptrt <- "PREDATOR"
tpcodes <- treats[treats$treat %in% c(comptrt,"CONTROL"), ]
tpcodes$codes <- as.character(tpcodes$codes)
tpcodes$gard <- substr(tpcodes$codes, 3, 4)
gard <- tpcodes$gard[1]
fams <- as.character(unique(insects$family))
# Families agregated plants ----
llrodf <- data.frame()
for(fam in fams){
llro <- data.frame()
for(gard in unique(tpcodes$gard)){
pc <- tpcodes[tpcodes$gard == gard & tpcodes$treat == comptrt, ]$code
cc <- tpcodes[tpcodes$gard == gard & tpcodes$treat == "CONTROL", ]$code
VCpt <- sum(plants[(plants$CODE == cc & plants$LIFE.FORM %in% c("shrub","tree")),]$WEIGHT, na.rm = T)
VCmt <- sum(plants[(plants$CODE == pc & plants$LIFE.FORM %in% c("shrub","tree")),]$WEIGHT, na.rm=T)
VCph <- sum(plants[plants$CODE == cc & !(plants$LIFE.FORM %in% c("shrub","tree")),]$WEIGHT, na.rm = T)
VCmh <- sum(plants[plants$CODE == pc & !(plants$LIFE.FORM %in% c("shrub","tree")),]$WEIGHT, na.rm = T)
# totC <- sum(plants[(plants$CODE == cc),]$WEIGHT)
# totP <- sum(plants[(plants$CODE == pc),]$WEIGHT)
# VCph + VCpt # control plot biomass
# VCmh + VCmt # predator plot biomass
#
HCp <- sum(ins_bio[(ins_bio$family == fam & ins_bio$plot == cc), ]$bio,
na.rm = T)
HCm <- sum(ins_bio[(ins_bio$family == fam & ins_bio$plot == pc), ]$bio,
na.rm=T)
llro <- rbind(llro, data.frame(fam=fam, gard=gard, lVt=log(VCpt/VCmt),
lVh = log(VCph/VCmh), lH = log(HCp/HCm)))
}
llrodf <- rbind(llrodf, llro)
}
llrodf
# pdf("manuscript/figs/llratio.pdf", 6,6)
llp <- ggplot(llrodf, aes(x = lH, y=lVt))
llp + geom_point() +
geom_text(label = llrodf$gard)+
geom_point(aes(x = lH, y=lVh, col="red")) +
facet_wrap(llrodf$fam) +
theme_bw() +
xlab("Direct effect of predator removal on insects") +
ylab("Indirect effect of predator removal on plants")
# pdf("manuscript/figs/llratio.pdf", 6,6)
llp <- ggplot(llrodf, aes(x = lH, y=lVh))
llp + geom_point() +
geom_text(label = llrodf$gard)+
geom_point(aes(x = lH, y=lVh, col="red")) +
facet_wrap(llrodf$fam) +
theme_bw() +
xlab("Direct effect of predator removal on insects") +
ylab("Indirect effect of predator removal on plants")
# pdf("manuscript/figs/llratio.pdf", 6,6)
llp <- ggplot(llrodf, aes(x = lVh, y=lVt))
llp + geom_point() +
geom_text(label = llrodf$gard)+
geom_point(aes(x = lVh, y=lVt, col="red")) +
facet_wrap(llrodf$fam) +
theme_bw() +
xlab("Direct effect of predator removal on insects") +
ylab("Indirect effect of predator removal on plants")
source("code/contingencyTable.R")
library("bipartite")
library("igraph")
# 1. Load datesets ----
insects <- read.table("datasets/arthropods_clean.txt")
treats  <- read.table("datasets/treatments_clean.txt")
plants  <- read.table("datasets/plants_clean.txt")
size_dat <-read.table("datasets/size_dat_bio.txt")
# Attach biomass measurments to the main insects dataset
rownames(size_dat) <- size_dat$morph
arthbio  <- size_dat[as.character(insects$morphotype), ]
ins_bio <- cbind(insects, arthbio[, c("morph", "bio")])
ins_bio$totbio <- ins_bio$amount * ins_bio$bio
ins_bio
ins_bio
# Biomasses of insects per plot per plant
biofulldf <- data.frame()
gardnets <- list()
gardnetsfam <- list()
# Plots with biomass
for(pcode in as.character(treats$codes)){
print(pcode)
subinsdat <- ins_bio[ins_bio$plot == pcode,] # get insect biomass
plantcodes <- unique(subinsdat$tree) # see which plants have to be extracted
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
plantbio$SP_CODE <- as.character(plantbio$SP_CODE)
cumWeight <- tapply(plantbio$WEIGHT,
plantbio$SP_CODE,
sum)
pbio <- data.frame(SP_CODE = rownames(cumWeight),
WEIGHT = cumWeight)
rownames(pbio) <- pbio[,1]
plantb <- pbio[,2]
names(plantb) <- pbio[,1]
subinsct <- contingencyTable2(subinsdat, "tree", "family", "totbio",FALSE)
listnet <- list(subinsct)
names(listnet) <- pcode
gardnetsfam <- append(gardnetsfam, listnet)
# Add to the list
# By family or by species
subinsctsp <- contingencyTable2(subinsdat, "tree", "morph", "totbio",FALSE)
listnet <- list(subinsctsp)
names(listnet) <- pcode
gardnets <- append(gardnets, listnet)
subdf <- data.frame()
# Collect data for a given plant within a plot
for(row in 1:nrow(subinsct)){
plnm <- rownames(subinsct)[row]
nms <- rownames(as.matrix(subinsct[row,]))
if(is.null(nms)){nms <- colnames(subinsct)}
bio <- as.matrix(subinsct[row,])
trt <- as.character(treats[treats$codes == pcode, "treat"])
plbio <- pbio[pbio$SP_CODE == plnm, "WEIGHT"]
ssdf <- data.frame(plot=pcode,bio=bio, nms=nms, plnm=plnm,
trt=trt,plbio=plbio)
subdf <- rbind(subdf, ssdf)
}
biofulldf <- rbind(biofulldf, subdf)
}
# Abundances of insects per plot per plant ----
abufulldf <- data.frame()
abugardnets <- list()
abugardnetsfam <- list()
# Plots with biomass
for(pcode in as.character(treats$codes)){
print(pcode)
subinsdat <- ins_bio[ins_bio$plot == pcode,] # get insect biomass
plantcodes <- unique(subinsdat$tree) # see which plants have to be extracted
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
plantbio$SP_CODE <- as.character(plantbio$SP_CODE)
cumWeight <- tapply(plantbio$WEIGHT,
plantbio$SP_CODE,
sum)
pbio <- data.frame(SP_CODE = rownames(cumWeight),
WEIGHT = cumWeight)
rownames(pbio) <- pbio[,1]
plantb <- pbio[,2]
names(plantb) <- pbio[,1]
subinsct <- contingencyTable2(subinsdat, "tree", "family", "amount",FALSE)
listnet <- list(subinsct)
names(listnet) <- pcode
abugardnetsfam <- append(abugardnetsfam, listnet)
# Add to the list
# By family or by species
subinsctsp <- contingencyTable2(subinsdat, "tree", "morph", "amount",FALSE)
listnet <- list(subinsctsp)
names(listnet) <- pcode
abugardnets <- append(abugardnets, listnet)
subdf <- data.frame()
# Collect data for a given plant within a plot
for(row in 1:nrow(subinsct)){
plnm <- rownames(subinsct)[row]
nms <- rownames(as.matrix(subinsct[row,]))
if(is.null(nms)){nms <- colnames(subinsct)}
bio <- as.matrix(subinsct[row,])
trt <- as.character(treats[treats$codes == pcode, "treat"])
plbio <- pbio[pbio$SP_CODE == plnm, "WEIGHT"]
ssdf <- data.frame(plot=pcode,bio=bio, nms=nms, plnm=plnm,
trt=trt,plbio=plbio)
subdf <- rbind(subdf, ssdf)
}
abufulldf <- rbind(abufulldf, subdf)
}
abufulldf
abugardnets
abugardnetsfam
abufulldf
rownames(abufulldf)
abufulldf
abugardnets
biofulldf
# Dataset containing biomasses for the log ratio comparisons
biollcp <- biofulldf[biofulldf$trt %in% c("CONTROL", "PREDATOR"),]
biollcp
biollcp$plot <- as.character(biollcp$plot)
biollcp$plnm <- as.character(biollcp$plnm)
biollcp$trt <- as.character(biollcp$trt)
table(biollcp$trt, biollcp$plnm)
abugardnetsfam
insects <- read.table("datasets/arthropods_clean.txt")
treats  <- read.table("datasets/treatments_clean.txt")
plants  <- read.table("datasets/plants_clean.txt")
size_dat <-read.table("datasets/size_dat_bio.txt")
library(bipartite)
library(lme4)
library(lmerTest)
source("code/bio_log_ratio.R")
source("code/contingencyTable.R")
gardnets
# Data analysis ----
# Direct and indirect effects on plants can be calculated using the log ratio. ln(Vp+/Vp-) where V's are community variables (herbivore abundance and plant biomass in the presence and absence of herbivores). These effect magnitudes can be plotted in relation to each other on an x-y plane and in relation to a 45 deg reference line tha represents the equivalence in strength of direct and indirect effect of carnivores.
# The log ratio effect of carnivores on herbivores should always be negative if carnivores are limiting herbivores regardles of the of the way herbivores are resource limited.
# page 36 Resloving ecosystem complexity
# I need biomass of herbivores, arthropod predators and plant for each plot.
# Inspect that and see if there are any changes in the food web structure. What can i expect?
source("code/contingencyTable.R")
library("bipartite")
library("igraph")
# 1. Load datesets ----
insects <- read.table("datasets/arthropods_clean.txt")
treats  <- read.table("datasets/treatments_clean.txt")
plants  <- read.table("datasets/plants_clean.txt")
size_dat <-read.table("datasets/size_dat_bio.txt")
# sizes   <- read.table("datasets/sizes_clean.txt")
# Attach biomass measurments to the main insects dataset
rownames(size_dat) <- size_dat$morph
arthbio  <- size_dat[as.character(insects$morphotype), ]
ins_bio <- cbind(insects, arthbio[, c("morph", "bio")])
ins_bio$totbio <- ins_bio$amount * ins_bio$bio
# ins_bio[1341,]
# Missing stuff, try to measure myself
# ins_bio[!complete.cases(ins_bio),]
# Insect abundances
# tapply(ins_bio$amount,ins_bio$plot, sum)
# ins_bio[ins_bio$plot == pcode,]
# Biomasses of insects per plot per plant
biofulldf <- data.frame()
gardnets <- list()
gardnetsfam <- list()
# 1.1 Abundances networks ----
# Plots with biomass
for(pcode in as.character(treats$codes)){
print(pcode)
subinsdat <- ins_bio[ins_bio$plot == pcode,] # get insect biomass
plantcodes <- unique(subinsdat$tree) # see which plants have to be extracted
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
plantbio$SP_CODE <- as.character(plantbio$SP_CODE)
cumWeight <- tapply(plantbio$WEIGHT,
plantbio$SP_CODE,
sum)
pbio <- data.frame(SP_CODE = rownames(cumWeight),
WEIGHT = cumWeight)
rownames(pbio) <- pbio[,1]
plantb <- pbio[,2]
names(plantb) <- pbio[,1]
subinsct <- contingencyTable2(subinsdat, "tree", "family", "totbio",FALSE)
listnet <- list(subinsct)
names(listnet) <- pcode
gardnetsfam <- append(gardnetsfam, listnet)
# Add to the list
# By family or by species
subinsctsp <- contingencyTable2(subinsdat, "tree", "morph", "totbio",FALSE)
listnet <- list(subinsctsp)
names(listnet) <- pcode
gardnets <- append(gardnets, listnet)
subdf <- data.frame()
# Collect data for a given plant within a plot
for(row in 1:nrow(subinsct)){
plnm <- rownames(subinsct)[row]
nms <- rownames(as.matrix(subinsct[row,]))
if(is.null(nms)){nms <- colnames(subinsct)}
bio <- as.matrix(subinsct[row,])
trt <- as.character(treats[treats$codes == pcode, "treat"])
plbio <- pbio[pbio$SP_CODE == plnm, "WEIGHT"]
ssdf <- data.frame(plot=pcode,bio=bio, nms=nms, plnm=plnm,
trt=trt,plbio=plbio)
subdf <- rbind(subdf, ssdf)
}
biofulldf <- rbind(biofulldf, subdf)
}
# pcode <- "w1g5p1" # assign plot name
biofulldf   # dataframe
gardnets    # morphotype based networks for each garden
gardnetsfam # family aagregated networks for all garden
# 1.2 Interaction based networks ----
# Abundances of insects per plot per plant
abufulldf <- data.frame()
abugardnets <- list()
abugardnetsfam <- list()
# Plots with biomass
for(pcode in as.character(treats$codes)){
print(pcode)
subinsdat <- ins_bio[ins_bio$plot == pcode,] # get insect biomass
plantcodes <- unique(subinsdat$tree) # see which plants have to be extracted
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
plantbio$SP_CODE <- as.character(plantbio$SP_CODE)
cumWeight <- tapply(plantbio$WEIGHT,
plantbio$SP_CODE,
sum)
pbio <- data.frame(SP_CODE = rownames(cumWeight),
WEIGHT = cumWeight)
rownames(pbio) <- pbio[,1]
plantb <- pbio[,2]
names(plantb) <- pbio[,1]
subinsct <- contingencyTable2(subinsdat, "tree", "family", "amount",FALSE)
listnet <- list(subinsct)
names(listnet) <- pcode
abugardnetsfam <- append(abugardnetsfam, listnet)
# Add to the list
# By family or by species
subinsctsp <- contingencyTable2(subinsdat, "tree", "morph", "amount",FALSE)
listnet <- list(subinsctsp)
names(listnet) <- pcode
abugardnets <- append(abugardnets, listnet)
subdf <- data.frame()
# Collect data for a given plant within a plot
for(row in 1:nrow(subinsct)){
plnm <- rownames(subinsct)[row]
nms <- rownames(as.matrix(subinsct[row,]))
if(is.null(nms)){nms <- colnames(subinsct)}
bio <- as.matrix(subinsct[row,])
trt <- as.character(treats[treats$codes == pcode, "treat"])
plbio <- pbio[pbio$SP_CODE == plnm, "WEIGHT"]
ssdf <- data.frame(plot=pcode,bio=bio, nms=nms, plnm=plnm,
trt=trt,plbio=plbio)
subdf <- rbind(subdf, ssdf)
}
abufulldf <- rbind(abufulldf, subdf)
}
abufulldf # dataframe
abugardnets # morphotype based networks for each garden
abugardnetsfam # family aagregated networks for all garden
# Dataset containing biomasses for the log ratio comparisons
biollcp <- biofulldf[biofulldf$trt %in% c("CONTROL", "PREDATOR"),]
biollcp$plot <- as.character(biollcp$plot)
biollcp$plnm <- as.character(biollcp$plnm)
biollcp$trt <- as.character(biollcp$trt)
table(biollcp$trt, biollcp$plnm)
biollcp$trt
biollcp$plnm
biollcp$gard <- substr(biollcp$plot, 3,4)
biollcp$gard
logratiodf <- data.frame()
logratiodf
biollcp$gard <- substr(biollcp$plot, 3,4){
subbl <- biollcp[biollcp$gard == block, ]
print(subbl)
}
biollcp$gard <- substr(biollcp$plot, 3,4){
subbl <- biollcp[biollcp$gard == block, ]
for(plot in unique(subbl$plot)){
print(plot)
}
}
biollcp$gard <- substr(biollcp$plot, 3,4){
subbl <- biollcp[biollcp$gard == block, ]
for(plot in unique(subbl$plot)){
print(plot)
}
}
for (block in unique(biollcp$gard)){
for(plt in unique(subbl$plot)){
print(plt)
}
}
for (block in unique(biollcp$gard)){
subbl <- biollcp[biollcp$gard == block, ]
for(plt in unique(subbl$plot)){
print(plt)
}
}
print(subbl[subbl$trt == "CONTROL", ])
dat <- subbl[subbl$trt == "CONTROL", ]
for (block in unique(biollcp$gard)){
subbl <- biollcp[biollcp$gard == block, ]
for(plt in unique(subbl$plot)){
subplot <- subbl[subbl$trt == "CONTROL", ]
for (plant in unique(subplot$plnm)){
subplant <- subplot[subplot$plnm == plant,]
print(subplant)
}
}
}
# for each plant evaluate H, IP and P and then sum them together
biovec <- c()
insects
unique(insects$family)
# for each plant evaluate H, IP and P and then sum them together
biovec <- c()
for (plant in unique(subplot$plnm)){
subplant <- subplot[subplot$plnm == plant,]
ip <- sum(subplant[subplant$nms %in% c("aran","mant"), ]$bio)
h <- sum(subplant[!(subplant$nms %in% c("aran","mant")), ]$bio)
p <- subplant[,1]
biovec <- biovec + biovec(h,ip,p)
}
# for each plant evaluate H, IP and P and then sum them together
biovec <- c()
for (plant in unique(subplot$plnm)){
subplant <- subplot[subplot$plnm == plant,]
ip <- sum(subplant[subplant$nms %in% c("aran","mant"), ]$bio)
h <- sum(subplant[!(subplant$nms %in% c("aran","mant")), ]$bio)
p <- subplant[,1]
biovec <- biovec + biovec(h,ip,p)
}
# for each plant evaluate H, IP and P and then sum them together
biovec <- c()
for (plant in unique(subplot$plnm)){
subplant <- subplot[subplot$plnm == plant,]
ip <- sum(subplant[subplant$nms %in% c("aran","mant"), ]$bio)
h <- sum(subplant[!(subplant$nms %in% c("aran","mant")), ]$bio)
p <- subplant[,1]
biovec <- biovec + c(h,ip,p)
}
c(h,ip,p)
subplant
ip <- sum(subplant[subplant$nms %in% c("aran","mant"), ]$bio)
ip
# for each plant evaluate H, IP and P and then sum them together
biovec <- c()
for (plant in unique(subplot$plnm)){
subplant <- subplot[subplot$plnm == plant,]
ip <- sum(subplant[subplant$nms %in% c("aran","mant"), ]$bio)
h <- sum(subplant[!(subplant$nms %in% c("aran","mant")), ]$bio)
p <- subplant[,1]$bio
biovec <- biovec + c(h,ip,p)
}
subplant[,1]
subplant[,1]$bio
subplant$bio
subplant$bio[1]
# for each plant evaluate H, IP and P and then sum them together
biovec <- c()
for (plant in unique(subplot$plnm)){
subplant <- subplot[subplot$plnm == plant,]
ip <- sum(subplant[subplant$nms %in% c("aran","mant"), ]$bio)
h <- sum(subplant[!(subplant$nms %in% c("aran","mant")), ]$bio)
p <- subplant$bio[1]
biovec <- biovec + c(h,ip,p)
}
biovec
# for each plant evaluate H, IP and P and then sum them together
biovec <- c(0,0,0)
for (plant in unique(subplot$plnm)){
subplant <- subplot[subplot$plnm == plant,]
ip <- sum(subplant[subplant$nms %in% c("aran","mant"), ]$bio)
h <- sum(subplant[!(subplant$nms %in% c("aran","mant")), ]$bio)
p <- subplant$bio[1]
biovec <- biovec + c(h,ip,p)
}
biovec
subplant
# for each plant evaluate H, IP and P and then sum them together
biovec <- c(0,0,0)
for (plant in unique(subplot$plnm)){
print(plant)
subplant <- subplot[subplot$plnm == plant,]
ip <- sum(subplant[subplant$nms %in% c("aran","mant"), ]$bio)
h <- sum(subplant[!(subplant$nms %in% c("aran","mant")), ]$bio)
p <- subplant$bio[1]
print(c(h,ip,p))
biovec <- biovec + c(h,ip,p)
}
# for each plant evaluate H, IP and P and then sum them together
biovec <- c(0,0,0)
for (plant in unique(subplot$plnm)){
print(plant)
subplant <- subplot[subplot$plnm == plant,]
ip <- sum(subplant[subplant$nms %in% c("aran","mant"), ]$bio)
h <- sum(subplant[!(subplant$nms %in% c("aran","mant")), ]$bio)
p <- subplant$plbio[1]
print(c(h,ip,p))
biovec <- biovec + c(h,ip,p)
}
biovec
