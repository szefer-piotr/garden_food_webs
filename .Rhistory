spibc <- ibc[ibc$morphotype == sp,]
spibc$treat <- treats_trimmed[as.character(spibc$plot),]$treat
# Compare predator effect on food web ----
par(mfrow=c(2,1))
library(bipartite)
plotweb(ccompFood, method = "normal")
plotweb(pcompFood, method = "normal")
main_biomass
main
main[main$TREAT == "CONTROL", "WEIGHT"]
?tapply
biomassC <- apply(main[main$TREAT == "CONTROL", "WEIGHT"],
main[main$TREAT == "CONTROL",],sum)
biomassC <- apply(main[main$TREAT == "CONTROL", "WEIGHT"],
main[main$TREAT == "CONTROL",]$SP_CODE,sum)
main[main$TREAT == "CONTROL", "WEIGHT"]
main[main$TREAT == "CONTROL",]$SP_CODE
biomassC <- apply(main[main$TREAT == "CONTROL", c("SP_CODE","WEIGHT"],
biomassC <- apply(main[main$TREAT == "CONTROL", c("SP_CODE","WEIGHT")],
main[main$TREAT == "CONTROL",]$SP_CODE,sum)
main$SP_CODE <- as.character(main$SP_CODE)
biomassC <- apply(main[main$TREAT == "CONTROL", c("SP_CODE","WEIGHT")],
main[main$TREAT == "CONTROL",]$SP_CODE,sum)
biomassC <- tapply(main[main$TREAT == "CONTROL", c("SP_CODE","WEIGHT")],
main[main$TREAT == "CONTROL",]$SP_CODE,sum)
biomassC <- tapply(main[main$TREAT == "CONTROL", c("WEIGHT")],
main[main$TREAT == "CONTROL",]$SP_CODE,sum)
biomassC
biomassP <- tapply(main[main$TREAT == "PREDATOR", c("WEIGHT")],
main[main$TREAT == "PREDATOR",]$SP_CODE,sum)
biomassP
?plotweb
plotweb(ccompFood, method = "normal", low.abun = biomassC)
biomassC
?plotweb
biomassC[colnames(ccompFood)]
colnames(ccompFood)
biomassC[rownames(ccompFood)]
rownames(ccompFood)
names(biomassC)
names(biomassC) <- tolower(names(biomassC))
biomassC[rownames(ccompFood)]
plotweb(ccompFood, method = "normal", low.abun = biomassC)
names(biomassP) <- tolower(names(biomassP))
plotweb(pcompFood, method = "normal", low.abun = biomassP)
# Compare predator effect on food web ----
par(mfrow=c(2,1))
plotweb(ccompFood, method = "normal", low.abun = biomassC)
plotweb(pcompFood, method = "normal", low.abun = biomassP)
?plotweb2
?plotweb
biomassP
biomassC
# How dissimilar are these sites in case of plants?
cdf <- data.frame(species=names(biomassC),
bio = biomassC,
site = "control")
cdf
# How dissimilar are these sites in case of plants?
Cdf <- data.frame(species=names(biomassC),
bio = biomassC,
site = "control")
?procrustes
czvalues(ccompFood)
computeModules(ccompFood)
plot(computeModules(ccompFood))
mcfw <- computeModules(ccompFood)
czvalsc <- czvalues(mcfw)
czvalsc
plot(czvalsc)
plot(czvalsc$c, czvalsc$z)
mpfw <- computeModules(pcompFood)
czvalsp <- czvalues(mpfw)
plot(czvalsp$c, czvalsp$z)
plot(czvalsc$c, czvalsc$z)
abline(h=2.5)
abline(v=0.62)
plot(czvalsp$c, czvalsp$z)
abline(h=2.5)
abline(v=0.62)
?procrustes
mpfw <- computeModules(pcompFood)
czvalsp <- czvalues(mpfw)
plot(czvalsc$c, czvalsc$z)
abline(h=2.5)
abline(v=0.62)
plot(czvalsp$c, czvalsp$z)
abline(h=2.5)
abline(v=0.62)
data(varespec)
vare.dist <- vegdist(wisconsin(varespec))
mds.null <- monoMDS(vare.dist, y = cmdscale(vare.dist))
mds.alt <- monoMDS(vare.dist)
vare.proc <- procrustes(mds.alt, mds.null)
vare.proc
summary(vare.proc)
plot(vare.proc)
plot(vare.proc, kind=2)
residuals(vare.proc)
mds.null
mds.alt
vare.proc <- procrustes(mds.alt, mds.null)
vare.proc
summary(vare.proc)
plot(vare.proc)
a <- c(2.3, 2,4)
b <- c(1,3)
procrustes(a,b)
a <- c(2.3, 2.4)
b <- c(1,3)
procrustes(a,b)
cbind(czvalsc$c, czvalsc$z)
proc  <- procrustes(cbind(czvalsc$c, czvalsc$z),
cbind(czvalsp$c, czvalsp$z))
plot(proc)
par(mfrow=c(1,1))
plot(proc)
mpfw <- computeModules(pcompFood)
czvalsp <- czvalues(mpfw)
plot(czvalsc$c, czvalsc$z)
abline(h=2.5)
abline(v=0.62)
plot(czvalsp$c, czvalsp$z)
abline(h=2.5)
abline(v=0.62)
colnames(pcompFood)
plot(czvalsc$c, czvalsc$z, col = colnames(pcompFood))
grayAlpha <- rgb(255,255,255,100,maxColorValue = 255)
colors <- rep(grayAlpha,length(colnames(pcompFood)))
plot(czvalsc$c, czvalsc$z, col = colors)
colors
grayAlpha <- rgb(255,150,255,100,maxColorValue = 255)
colors <- rep(grayAlpha,length(colnames(pcompFood)))
plot(czvalsc$c, czvalsc$z, col = colors)
grayAlpha <- rgb(0,0,0,100,maxColorValue = 255)
colors <- rep(grayAlpha,length(colnames(pcompFood)))
plot(czvalsc$c, czvalsc$z, col = colors)
plot(czvalsc$c, czvalsc$z, col = colors, pch = 19)
grayAlpha <- rgb(0,0,0,50,maxColorValue = 255)
colors <- rep(grayAlpha,length(colnames(pcompFood)))
plot(czvalsc$c, czvalsc$z, col = colors, pch = 19)
czvalsc$c
max(czvalsc$c)
max(czvalsc$z)
czvalsc == max(czvalsc)
czvalsc == max(czvalsc)
czvalsc$z == max(czvalsc$z)
czvals$z[czvalsc$z == max(czvalsc$z)]
colors[czvalsc$z == max(czvalsc$z)]
colors[czvalsc$z == max(czvalsc$z)] <- 'green'
plot(czvalsc$c, czvalsc$z, col = colors, pch = 19)
names(czvalsc$z)[czvalsc$z == max(czvalsc$z)]
colors[colnames(ccompFood) == "cole005"]
colors[colnames(ccompFood) == "cole005"] <- "forestgreen"
plot(czvalsc$c, czvalsc$z, col = colors, pch = 19)
colors[colnames(ccompFood) == "cole005"] <- "red"
plot(czvalsc$c, czvalsc$z, col = colors, pch = 19)
colorsC <- rep(grayAlpha,length(colnames(ccompFood)))
names(czvalsc$z)[czvalsc$z == max(czvalsc$z)]
colorsC[colnames(ccompFood) == "cole005"] <- "red"
plot(czvalsc$c, czvalsc$z, col = colorsC, pch = 19)
colorsP <- rep(grayAlpha,length(colnames(pcompFood)))
colors[colnames(pcompFood) == "cole005"] <- "red"
plot(czvalsp$c, czvalsp$z, col = colorsP, pch = 19)
colorsP <- rep(grayAlpha,length(colnames(pcompFood)))
colorsP[colnames(pcompFood) == "cole005"] <- "red"
plot(czvalsp$c, czvalsp$z, col = colorsP, pch = 19)
colorsP <- rep(grayAlpha,length(colnames(pcompFood)))
colorsP[colnames(pcompFood) == "cole005"] <- "red"
plot(czvalsp$c, czvalsp$z, col = colorsP, pch = 19)
grayAlpha <- rgb(0,0,0,10,maxColorValue = 255)
colorsC <- rep(grayAlpha,length(colnames(ccompFood)))
names(czvalsc$z)[czvalsc$z == max(czvalsc$z)]
colorsC[colnames(ccompFood) == "cole005"] <- "red"
plot(czvalsc$c, czvalsc$z, col = colorsC, pch = 19)
colorsP <- rep(grayAlpha,length(colnames(pcompFood)))
colorsP[colnames(pcompFood) == "cole005"] <- "red"
plot(czvalsp$c, czvalsp$z, col = colorsP, pch = 19)
pcompFood[, "cole005"]
ccompFood[, "cole005"]
proc  <- procrustes(cbind(czvalsc$c, czvalsc$z),
cbind(czvalsp$c, czvalsp$z))
proc
summary(proc)
plot(proc)
?procrustes
proc$translation
proc$Yrot
proc  <- procrustes(cbind(czvalsp$c, czvalsp$z),
cbind(czvalsc$c, czvalsc$z))
proc$Yrot
plot(proc)
grep("aran|mant", ins_bio$morphotype)
ips <- grep("aran|mant", ins_bio$morphotype)
ips <- grep("aran|mant", ins_bio$morphotype)
# DIET SWITCHING ----
# Herbivores present in P and C treatments
predsites <- treats[treats$treat == "PREDATOR",]$codes
contsites <- treats[treats$treat == "CONTROL",]$codes
ips <- grep("aran|mant", ins_bio$morphotype)
pabumat <- contingencyTable2(ins_bio[(ins_bio[-ips, ]$plot %in% predsites), ],
"plot","morphotype","amount")
pbiomat <- contingencyTable2(ins_bio[ins_bio[-ips, ]$plot %in% predsites, ],
"plot","morphotype","totbio")
cabumat <- contingencyTable2(ins_bio[ins_bio[-ips, ]$plot %in% contsites, ],
"plot","morphotype","amount")
cbiomat <- contingencyTable2(ins_bio[ins_bio[-ips, ]$plot %in% contsites, ],
"plot","morphotype","totbio")
comparable <- colnames(cbiomat)[colnames(cbiomat) %in% colnames(pbiomat)]
# Remove intermediate predators
comparable
ins_bioOrig <- ins_bio
ins_bio <- ins_bio[-ips, ]
ins_bio
pabumat <- contingencyTable2(ins_bio[(ins_bio$plot %in% predsites), ],
"plot","morphotype","amount")
pbiomat <- contingencyTable2(ins_bio[ins_bio$plot %in% predsites, ],
"plot","morphotype","totbio")
cabumat <- contingencyTable2(ins_bio[ins_bio$plot %in% contsites, ],
"plot","morphotype","amount")
cbiomat <- contingencyTable2(ins_bio[ins_bio$plot %in% contsites, ],
"plot","morphotype","totbio")
comparable <- colnames(cbiomat)[colnames(cbiomat) %in% colnames(pbiomat)]
# Remove intermediate predators
comparable
# Food plants for comparable herbivores
cp_treats <- treats_trimmed[treats_trimmed$treat %in% c("CONTROL","PREDATOR"),]$sites
csites <- treats_trimmed[treats_trimmed$treat %in% c("CONTROL"),]$sites
psites <- treats_trimmed[treats_trimmed$treat %in% c("PREDATOR"),]$sites
ins_bio_cp <- ins_bio[ins_bio$plot %in% cp_treats, ]
ins_bio_cp_comparable <- ins_bio_cp[ins_bio_cp$morphotype %in% comparable,]
ibc <- ins_bio_cp_comparable
ibc <- ibc[complete.cases(ibc),]
ccompFood <- contingencyTable2(ibc[ibc$plot %in% csites, ],
"tree",
"morphotype",
"totbio")
pcompFood <- contingencyTable2(ibc[ibc$plot %in% psites, ],
"tree",
"morphotype",
"totbio")
dim(pcompFood)
dim(ccompFood)
# inspect individual species
sp <- comparable[78]
spibc <- ibc[ibc$morphotype == sp,]
spibc$treat <- treats_trimmed[as.character(spibc$plot),]$treat
# Compare predator effect on food web ----
par(mfrow=c(2,1))
library(bipartite)
main$SP_CODE <- as.character(main$SP_CODE)
biomassC <- tapply(main[main$TREAT == "CONTROL", c("WEIGHT")],
main[main$TREAT == "CONTROL",]$SP_CODE,sum)
names(biomassC) <- tolower(names(biomassC))
biomassP <- tapply(main[main$TREAT == "PREDATOR", c("WEIGHT")],
main[main$TREAT == "PREDATOR",]$SP_CODE,sum)
names(biomassP) <- tolower(names(biomassP))
plotweb(ccompFood, method = "normal", low.abun = biomassC)
plotweb(pcompFood, method = "normal", low.abun = biomassP)
?plotweb
plotweb(ccompFood, method = "normal",
low.abun = biomassC, labsize = 2, bor.col.interaction = "white",
text.rot = 90)
plotweb(ccompFood, method = "normal",
low.abun = biomassC, labsize = 1, bor.col.interaction = "white",
text.rot = 90)
plotweb(ccompFood, method = "normal",
low.abun = biomassC, labsize = 50, bor.col.interaction = "white",
text.rot = 90)
plotweb(ccompFood, method = "normal",
low.abun = biomassC, labsize = 5,
text.rot = 90)
# Compare predator effect on food web ----
par(mfrow=c(1,1))
plotweb(ccompFood, method = "normal",
low.abun = biomassC, labsize = 5,
text.rot = 90)
plotweb(ccompFood, method = "normal",
low.abun = biomassC, labsize = 1.1,
text.rot = 90)
# mcfw <- computeModules(ccompFood)
czvalsc <- czvalues(mcfw)
mcfw <- computeModules(ccompFood)
czvalsc <- czvalues(mcfw)
plot(czvalsc$c, czvalsc$z)
# mpfw <- computeModules(pcompFood)
czvalsp <- czvalues(mpfw)
grayAlpha <- rgb(0,0,0,10,maxColorValue = 255)
mpfw <- computeModules(pcompFood)
czvalsp <- czvalues(mpfw)
grayAlpha <- rgb(0,0,0,10,maxColorValue = 255)
colorsC <- rep(grayAlpha,length(colnames(ccompFood)))
names(czvalsc$z)[czvalsc$z == max(czvalsc$z)]
colorsC[colnames(ccompFood) == "cole005"] <- "red"
plot(czvalsc$c, czvalsc$z, col = colorsC, pch = 19)
colorsP <- rep(grayAlpha,length(colnames(pcompFood)))
colorsP[colnames(pcompFood) == "cole005"] <- "red"
plot(czvalsp$c, czvalsp$z, col = colorsP, pch = 19)
abline(h=2.5)
abline(v=0.62)
nm <- names(czvalsc$z)[czvalsc$z == max(czvalsc$z)]
nm
colorsC <- rep(grayAlpha,length(colnames(ccompFood)))
nm <- names(czvalsc$z)[czvalsc$z == max(czvalsc$z)]
colorsC[colnames(ccompFood) == nm] <- "red"
colorsP <- rep(grayAlpha,length(colnames(pcompFood)))
colorsP[colnames(pcompFood) == nm] <- "red"
plot(czvalsc$c, czvalsc$z, col = colorsC, pch = 19)
abline(h=2.5)
abline(v=0.62)
plot(czvalsp$c, czvalsp$z, col = colorsP, pch = 19)
abline(h=2.5)
abline(v=0.62)
proc  <- procrustes(cbind(czvalsp$c, czvalsp$z),
cbind(czvalsc$c, czvalsc$z))
proc$ss
proc$scale
proc$svd
proc$xmean
proc$translation
residuals(proc)
nm
hist(residuals(proc))
nm <- "cole131"
colorsC[colnames(ccompFood) == nm] <- "red"
colorsP <- rep(grayAlpha,length(colnames(pcompFood)))
colorsP[colnames(pcompFood) == nm] <- "red"
plot(czvalsc$c, czvalsc$z, col = colorsC, pch = 19)
abline(h=2.5)
abline(v=0.62)
plot(czvalsp$c, czvalsp$z, col = colorsP, pch = 19)
abline(h=2.5)
abline(v=0.62)
colorsC <- rep(grayAlpha,length(colnames(ccompFood)))
nm <- names(czvalsc$z)[czvalsc$z == max(czvalsc$z)]
nm <- "cole131"
colorsC[colnames(ccompFood) == nm] <- "red"
colorsP <- rep(grayAlpha,length(colnames(pcompFood)))
colorsP[colnames(pcompFood) == nm] <- "red"
plot(czvalsc$c, czvalsc$z, col = colorsC, pch = 19)
abline(h=2.5)
abline(v=0.62)
plot(czvalsp$c, czvalsp$z, col = colorsP, pch = 19)
abline(h=2.5)
abline(v=0.62)
czvalsp$z
czvalsp$z["cole131"]
pcompFood[, "cole131"]
ccompFood[, "cole131"]
proc  <- procrustes(cbind(czvalsp$c, czvalsp$z),
cbind(czvalsc$c, czvalsc$z),
scale = T,
symmetric = T)
proc
hist(residuals(proc))
proc$scale
plot(proc)
text(proc)
pdi
pdidata
max(residuals(proc))
residual(proc)[max(residuals(proc))]
max(residuals(proc))
residuals(proc)
# Smallest change
min(residuals(proc))
sort(residuals(proc))
# inspect individual species
sp <- "orth052"
spibc <- ibc[ibc$morphotype == sp,]
spibc$treat <- treats_trimmed[as.character(spibc$plot),]$treat
spibc
pcompFood[,"orth052"]
pcompFood[,"orth052"]
ccompFood[,"orth052"]
before <- pcompFood[,"orth052"]
after <- ccompFood[,"orth052"]
badf <- data.frame(b = before,
a = after)
before <- pcompFood[,"orth052"]
after <- ccompFood[,"orth052"]
before
after
bdf <- data.frame(val = before,
a = "before")
adf <- data.frame(val = after,
trt = "after")
rbind(bdf,adf)
bdf <- data.frame(val = before,
trt = "before")
adf <- data.frame(val = after,
trt = "after")
rbind(bdf,adf)
bdf <- data.frame(spc = names(before),
val = before,
trt = "before")
adf <- data.frame(spc = names(after),
val = after,
trt = "after")
bamat <- contingencyTable2(rbind(bdf,adf), "spc", "trt", "val")
bamat
vegdist(bamat, method = "bray")
vegdist(t(bamat), method = "bray")
calcDietDissimilarity <- function(name, ...){
before <- pcompFood[,"orth052"]
after <- ccompFood[,"orth052"]
bdf <- data.frame(spc = names(before),
val = before,
trt = "before")
adf <- data.frame(spc = names(after),
val = after,
trt = "after")
bamat <- contingencyTable2(rbind(bdf,adf), "spc", "trt", "val")
return(vegdist(t(bamat), ...))
}
calcDietDissimilarity("orth052", "bray")
calcDietDissimilarity("orth052", "manhattan")
calcDietDissimilarity("orth052", "euclidean")
calcDietDissimilarity("orth052", "bray")
return(name = c(vegdist(t(bamat), ...)))
bamat <- contingencyTable2(rbind(bdf,adf), "spc", "trt", "val")
calcDietDissimilarity <- function(name, ...){
before <- pcompFood[,"orth052"]
after <- ccompFood[,"orth052"]
bdf <- data.frame(spc = names(before),
val = before,
trt = "before")
adf <- data.frame(spc = names(after),
val = after,
trt = "after")
bamat <- contingencyTable2(rbind(bdf,adf), "spc", "trt", "val")
return(name = c(vegdist(t(bamat), ...)))
}
calcDietDissimilarity("orth052", "bray")
calcDietDissimilarity <- function(name, ...){
before <- pcompFood[,"orth052"]
after <- ccompFood[,"orth052"]
bdf <- data.frame(spc = names(before),
val = before,
trt = "before")
adf <- data.frame(spc = names(after),
val = after,
trt = "after")
bamat <- contingencyTable2(rbind(bdf,adf), "spc", "trt", "val")
res <- c(vegdist(t(bamat), ...))
names(res) <- name
return(res)
}
calcDietDissimilarity("orth052", "bray")
for(nms in colnames(ccompFood)){
calcDietDissimilarity(nms, "bray")
}
calcDietDissimilarity <- function(name, ...){
before <- pcompFood[,name]
after <- ccompFood[,name]
bdf <- data.frame(spc = names(before),
val = before,
trt = "before")
adf <- data.frame(spc = names(after),
val = after,
trt = "after")
bamat <- contingencyTable2(rbind(bdf,adf), "spc", "trt", "val")
res <- c(vegdist(t(bamat), ...))
names(res) <- name
return(res)
}
for(nms in colnames(ccompFood)){
print(calcDietDissimilarity(nms, "bray"))
}
calcDietDissimilarity <- function(name, ...){
before <- pcompFood[,name]
after <- ccompFood[,name]
bdf <- data.frame(spc = names(before),
val = before,
trt = "before")
adf <- data.frame(spc = names(after),
val = after,
trt = "after")
bamat <- contingencyTable2(rbind(bdf,adf), "spc", "trt", "val")
res <- round(c(vegdist(t(bamat), ...)),3)
names(res) <- name
return(res)
}
for(nms in colnames(ccompFood)){
print(calcDietDissimilarity(nms, "bray"))
}
dietdiss <- data.frame()
dietdiss <- data.frame()
for(nms in colnames(ccompFood)){
entry <- calcDietDissimilarity(nms, "bray")
dsrow <- data.frame(species = names(entry),
braydiss = entry)
dietdiss <- rbind(dietdiss, dsrow)
}
dietdiss
diet_breadth
seldb <- diet_breadth[dietdiss$species]
seldb
cbind(dietdiss, seldb)
dbdd <- cbind(dietdiss, seldb)
plot(braydiss~seldb, data=dbdd)
?plot
plot(braydiss~seldb, data=dbdd, log="x")
plot(seldb~braydiss, data=dbdd, log="y")
plot(seldb~braydiss, data=dbdd)
plot(log(seldb)~braydiss, data=dbdd)
lm(log(seldb)~braydiss, data=dbdd)
seldb
log(seldb)
glm(seldb~braydiss, data=dbdd, family = gaussian(link = "log"))
glm(seldb~braydiss, data=dbdd, family = gaussian(link = "logit"))
glm(seldb~braydiss, data=dbdd, family = gaussian(link = "log"))
