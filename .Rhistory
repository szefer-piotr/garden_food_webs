unique(sdi$tree)
sum(sdp$SP_CODE %in% unique(sdi$tree))
length(unique(sdi$tree))
sum(sdp$SP_CODE %in% unique(sdi$tree)) == length(unique(sdi$tree))
# tremsp1 == tremor
unique(plants$SP_CODE)
# tremsp1 == tremor
unique(insects$tree)
# tremsp1 == tremor
insects[!(unique(insects$tree) %in% unique(plants$SP_CODE)),]
# tremsp1 == tremor
unique(insects$tree)[!(unique(insects$tree) %in% unique(plants$SP_CODE))]
unique(plants$SP_CODE)
sort(unique(plants$SP_CODE))
unique(plants$SPEC)
insects
# Script estimates biomasses of insects for each garden based on
# available lenght-body mass equation for insects.
# 1. Load datasets ----
insects <- read.table("datasets/wng_arthro_clean.txt")
sizes   <- read.table("datasets/wng_measurements.txt", header=T) # rsize is in cm
treats  <- read.table("datasets/treats_clean.txt")
plants  <- read.table("datasets/wng_main_bio.txt")
# correct headers and formating
colnames(sizes) <- c("morphotype", "no", "size", "scale", "scl", "notes",
"group", "nscl", "rsize")
plants$SP_CODE <- tolower(plants$SP_CODE)
# head(sizes)
# head(insects)
# head(plants)
# Size dataset, each morphotype's average size
size <- tapply(sizes$r, sizes$morphotype, mean)
mft <- names(size)
group <- substr(names(size),1,4)
size_dat <- data.frame(morph = mft,
size = as.numeric(size),
group = group)
# Models used to estimate biomass
# Ganihar 1997
# Araneae: power;b0=-3.2105 (0.1075);b1=2.4681(0.0756)
# Orthoptera: power;b0=-3.5338(0.2668);b1=2.4619(0.1002)
# Hemiptera: power;b0=-3.8893(0.3387);b1=2.7642(0.3113)
# Homoptera: power;b0=-3.1984(0.1174);b1=2.3487(0.0779)
# Coleoptera: power;b0=-3.2689(0.0659);b1=2.4625(0.0415)
# Wardhough
# (power model ln(weight) = ln(a) + b * length )
# weight <- exp(a) * size^b
# Mantodea:    a=-6.34(0.72);b=3.01(0.27)
# Araneae:     a=-2.13(0.15);b=2.23(0.11)
# Orthoptera:  a=-3.17(0.19);b=2.61(0.09)
# Hemiptera:   a=-3.01(0.17);b=2.59(0.09)
# Homoptera:   a=-3.20(0.12);b=2.35(0.08) (Ganihar 1997)
# Coleoptera:  a=-3.2(0.14); b=2.56(0.08)
# Lepidoptera: a=-5.44(); b=2.55
# Power model parameters for each family
allo_params <- data.frame(group = unique(sizes$group),
a = c(-6.34,-2.13,-3.01,-3.20,-3.2 ,-3.17, -5.44),
b = c( 3.01, 2.23, 2.59, 2.35, 2.56, 2.61,  2.55))
# Size of an average individual
size_dat$a <- 0
size_dat$b <- 0
for (grp in unique(allo_params$group)){
aval <- allo_params[allo_params$group == grp, ]$a
bval <- allo_params[allo_params$group == grp, ]$b
size_dat[size_dat$group == grp, ]$a <- aval
size_dat[size_dat$group == grp, ]$b <- bval
}
size_dat$bio <- exp(size_dat$a) * size_dat$size^size_dat$b
size_dat[size_dat$bio > 10,]
# size_dat[size_dat$group == "lepi",]
size_dat[size_dat$morph == "hemi009",]
sizes[sizes$morphotype == "hemi008",]
sizes[sizes$morphotype == "aran002",]
sizes[sizes$morphotype == "orth027",]
size_dat[size_dat$bio == Inf, ]
library(ggplot2)
bio_dist <- ggplot(size_dat, aes(x = log(bio), fill=group))
bio_dist + geom_histogram(binwidth=0.5)
# Biomass based networks
#example plot
plt <- "w1g1p1"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
size_dat[size_dat$bio > 10,]
# 1. Load datasets ----
insects <- read.table("datasets/wng_arthro_clean.txt")
sizes   <- read.table("datasets/wng_measurements.txt", header=T) # rsize is in cm
treats  <- read.table("datasets/treats_clean.txt")
plants  <- read.table("datasets/wng_main_bio.txt")
# correct headers and formating
colnames(sizes) <- c("morphotype", "no", "size", "scale", "scl", "notes",
"group", "nscl", "rsize")
plants$SP_CODE <- tolower(plants$SP_CODE)
# Size dataset, each morphotype's average size
size <- tapply(sizes$r, sizes$morphotype, mean)
mft <- names(size)
group <- substr(names(size),1,4)
size_dat <- data.frame(morph = mft,
size = as.numeric(size),
group = group)
# Power model parameters for each family
allo_params <- data.frame(group = unique(sizes$group),
a = c(-6.34,-2.13,-3.01,-3.20,-3.2 ,-3.17, -5.44),
b = c( 3.01, 2.23, 2.59, 2.35, 2.56, 2.61,  2.55))
# Size of an average individual
size_dat$a <- 0
size_dat$b <- 0
for (grp in unique(allo_params$group)){
aval <- allo_params[allo_params$group == grp, ]$a
bval <- allo_params[allo_params$group == grp, ]$b
size_dat[size_dat$group == grp, ]$a <- aval
size_dat[size_dat$group == grp, ]$b <- bval
}
size_dat$bio <- exp(size_dat$a) * size_dat$size^size_dat$b
size_dat[size_dat$bio > 10,]
size_dat[size_dat$morph == "hemi009",]
sizes[sizes$morphotype == "hemi008",]
sizes[sizes$morphotype == "aran002",]
sizes[sizes$morphotype == "orth027",]
size_dat[size_dat$bio == Inf, ]
#example plot
plt <- "w1g1p1"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
insects[insects$tree == "solatu" ]
insects[insects$tree == "solatu", ]
plants[plants$CODE == "w1g5p2",]
insects[insects$plot == "w1g5p2",]
unique(insects[insects$plot == "w1g5p2",]$tree)
unique(plants[plants$CODE == "w1g5p2",]$SPEC)
unique(plants[plants$CODE == "w1g5p2" & plants$LIFE.FORM %in% c("tree","shrub"),]$SPEC)
thin each family
# table(measur$family) # Number of measured individuals from each family
# Fixing some of the entries
measur$Size <- as.numeric(measur$Size)
names(measur) <- c("morphotype","no","size","scale","scl","notes", "group")
measur$morphotype <- as.character(measur$morphotype)
# Check and unify plant names
longnames <- which(sapply(as.character(measur$morphotype), nchar)>7)
chlist <- strsplit(as.character(measur[longnames, ]$morphotype), split=",")
for (i in 1:length(longnames)){
row <- longnames[i]
measur[row, 1] <- as.character(chlist[[i]][1])
measur[row, 2] <- as.numeric(chlist[[i]][2])
measur[row, 3] <- as.numeric(chlist[[i]][3])
measur[row, 5] <- as.numeric(chlist[[i]][6])
}
# measur <- measur[,c(1,2,3,5,6)]
# NOTE: Scale codes are as follows
# for MANT, ARAN, HEMI, HOMO: 1 cm = 10 [mm], 0.5 cm = 20 [mm], cm = 1
# for COLE, ORTH and LEPI check the data again!!!
# For cole scale 2 = 20, 1 = 10,
# Transform the scale factors
ent <- as.character(unique(measur$scale))
measur$nscl <- 0
measur[measur$scale %in% ent[c(2,5)], ]$nscl <- 10
measur[(measur$scale %in% ent[c(1,3,4,7)] & measur$scl == 0.5),]$nscl <- 20
measur[(measur$scale %in% ent[c(1,3,6,7)] & measur$scl == 1),]$nscl <- 1
measur[(measur$scale %in% ent[c(1,3,6,7)] & measur$scl == 2),]$nscl <- 2
# Some corrections for missing scale factors
measur[measur$morphotype == "cole065", ]$nscl <- 20
measur[2108, ]$nscl <- 10
# Is everything ok with coleoptera?
measur[measur$group == "cole",] #instead of 2 and 1 there are 1.0 and 2.0
# Real scale [cm] insect sizes
measur$rsize <- measur$size/measur$nscl
# Write a clean measurments table
# write.table(measur, "datasets/wng_measurements.txt")
# 2. Arthropod dataset cleaning ----
sort(unique(arthro$tree))
# Remove Sida rhombifolia - this is not a tree
arthro <- arthro[arthro$tree != "sida",]
# Change the names of trees
tochange <- data.frame(a = sort(unique(arthro$tree)),
b=sort(unique(arthro$tree)))
# Script that produces datasets used in the paper:
# 1. Measurments for each morphotype
# 2. Abundance for each family in each garden
# 3. Plant biomass in each plot
# 4. Treatment assignments to the plot codes
# 0. Contingency table function ----
# This function creates a contingency table for a given row category
# column categoory and sums values.
contingencyTable2 <- function(dataset, ROW, COL, VALUE){
# Get rid of the empty factors
dataset[, colnames(dataset) == ROW] <- as.character(dataset[, colnames(dataset) == ROW])
dataset[, colnames(dataset) == COL] <- as.character(dataset[, colnames(dataset) == COL])
# Make a table, get rid of the empty rows and columns
plants <- table(dataset[, colnames(dataset) == ROW], dataset[, colnames(dataset) == COL])
plants <- plants[rowSums(plants) != 0, colSums(plants) != 0]
# See where to insert values
allSpecCodes <- colnames(plants)
allPlotCodes <- rownames(plants)
entries <- which(plants != 0, arr.ind = TRUE)
# Loop through the entries and insert values
for (entry in 1:dim(entries)[1]){
plot <- entries[entry,1]
plant <- entries[entry,2]
specCode <- allSpecCodes[plant]
plotCode <- allPlotCodes[plot]
#res <- dataset[dataset$ROW == plotCode & dataset$COL == specCode,VALUE]
res <- dataset[dataset[,ROW] == plotCode & dataset[,COL] == specCode,VALUE]
# print(sum(res))
plants[plot,plant] <- sum(res, na.rm = TRUE)
}
plants[is.na(plants)] <- 0
# Change the table to a matrix or data.frame
mat_a <- matrix(0, nrow = dim(plants)[1], ncol = dim(plants)[2])
colnames(mat_a) <- colnames(plants)
rownames(mat_a) <- rownames(plants)
for (row in 1:dim(plants)[1]){
for (col in 1:dim(plants)[2])
mat_a[row,col] <- plants[row,col]
}
#return(plants)
return(mat_a)
}
# 1. Load, fix, and save datasets ----
# Measurements: insect body length ----
measur <- read.csv("datasets/csv_measurments_all.csv")
# Count data: incidence of insects on individual plant species ----
arthro <- read.csv("datasets/csv_wng_all.csv")
# Extract family abbreviation
arthro$family <- substr(arthro$morphotype, 1, 4)
measur$family <- substr(measur$morphotype, 1, 4)
# table(arthro$family) # Number of interactions within each family
# table(measur$family) # Number of measured individuals from each family
# Fixing some of the entries
measur$Size <- as.numeric(measur$Size)
names(measur) <- c("morphotype","no","size","scale","scl","notes", "group")
measur$morphotype <- as.character(measur$morphotype)
# Check and unify plant names
longnames <- which(sapply(as.character(measur$morphotype), nchar)>7)
chlist <- strsplit(as.character(measur[longnames, ]$morphotype), split=",")
for (i in 1:length(longnames)){
row <- longnames[i]
measur[row, 1] <- as.character(chlist[[i]][1])
measur[row, 2] <- as.numeric(chlist[[i]][2])
measur[row, 3] <- as.numeric(chlist[[i]][3])
measur[row, 5] <- as.numeric(chlist[[i]][6])
}
# measur <- measur[,c(1,2,3,5,6)]
# NOTE: Scale codes are as follows
# for MANT, ARAN, HEMI, HOMO: 1 cm = 10 [mm], 0.5 cm = 20 [mm], cm = 1
# for COLE, ORTH and LEPI check the data again!!!
# For cole scale 2 = 20, 1 = 10,
# Transform the scale factors
ent <- as.character(unique(measur$scale))
measur$nscl <- 0
measur[measur$scale %in% ent[c(2,5)], ]$nscl <- 10
measur[(measur$scale %in% ent[c(1,3,4,7)] & measur$scl == 0.5),]$nscl <- 20
measur[(measur$scale %in% ent[c(1,3,6,7)] & measur$scl == 1),]$nscl <- 1
measur[(measur$scale %in% ent[c(1,3,6,7)] & measur$scl == 2),]$nscl <- 2
# Some corrections for missing scale factors
measur[measur$morphotype == "cole065", ]$nscl <- 20
measur[2108, ]$nscl <- 10
# Is everything ok with coleoptera?
measur[measur$group == "cole",] #instead of 2 and 1 there are 1.0 and 2.0
# Real scale [cm] insect sizes
measur$rsize <- measur$size/measur$nscl
# Write a clean measurments table
# write.table(measur, "datasets/wng_measurements.txt")
# 2. Arthropod dataset cleaning ----
sort(unique(arthro$tree))
# Remove Sida rhombifolia - this is not a tree
arthro <- arthro[arthro$tree != "sida",]
# Change the names of trees
tochange <- data.frame(a = sort(unique(arthro$tree)),
b=sort(unique(arthro$tree)))
tochange$b[32]
tochange
#example plot
plt <- "w1g1p1"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdp$SP_CODE %in% unique(sdi$tree)
# what could this be?
insects[insects$tree == "solatu", ]
plants[plants$CODE == "w1g5p2", ]
plants[plants$CODE == "w1g5p2" & plants$TRUNK != NA, ]
plants$TRUNK != NA
plants[plants$CODE == "w1g5p2" & plants$TRUNK != "NA", ]
plants[plants$CODE == "w1g5p2" & plants$TRUNK > 0, ]
plants[plants$CODE == "w1g5p2" & plants$TRUNK > 1, ]
plants[plants$CODE == "w1g5p2", ]
# what could this be?
insects[insects$tree == "solatu", ]$tree  <- "melamu"
insects[insects$tree == "solatu", ]
#example plot
plt <- "w1g1p1"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
insects[insects$tree == "trems1", ]
# it has to be melamu the most abundant on the plot
insects[insects$tree == "trems1", ]$tree  <- "tremor"
#example plot
plt <- "w1g1p1"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdp$SP_CODE %in% unique(sdi$tree)
sdp$SP_CODE
unique(sdi$tree)
sum(sdp$SP_CODE %in% unique(sdi$tree)) == length(unique(sdi$tree))
#example plot
plt <- "w1g1p1"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdp$SP_CODE
unique(sdi$tree)
sum(sdp$SP_CODE %in% unique(sdi$tree)) == length(unique(sdi$tree))
sdp$SP_CODE %in% unique(sdi$tree)
length(unique(sdi$tree))
sum(sdp$SP_CODE %in% unique(sdi$tree))
sdp$SP_CODE
sdp$SP_CODE
unique(sdi$tree)
sdp$SP_CODE %in% unique(sdi$tree)
sdp$SP_CODE
sdp
sum(unique(sdp$SP_CODE) %in% unique(sdi$tree)) == length(unique(sdi$tree))
#example plot
plt <- "w1g1p2"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdp$SP_CODE
unique(sdi$tree)
tochange
insects[insects$tree == "trems1", ]
insects[insects$tree == "mimodi", ]
unique(plants$SPEC)
plants[plants$CODE == "w1g1p2", ]
sdp$SP_CODE
plt
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdi
plants[plants$CODE == "w1g1p2", ]
unique(sdi$tree)
unique(sdi$tree)
# Check if there are othher plots with this plant
plants[plants$SP_CODE == "mimodi", ]
# Check if there are othher plots with this plant
plants[plants$SP_CODE == "breyce", ]
insects[insects$tree == "breyce", ]
insects[insects$tree == "trichpl", ]
insects[insects$tree == "tricpl", ]
arthro
#example plot
plt <- "w1g1p3"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdp$SP_CODE
unique(sdi$tree)
sum(unique(sdp$SP_CODE) %in% unique(sdi$tree)) == length(unique(sdi$tree))
#example plot
plt <- "w1g1p4"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdp$SP_CODE
unique(sdi$tree)
sum(unique(sdp$SP_CODE) %in% unique(sdi$tree)) == length(unique(sdi$tree))
#example plot
plt <- "w1g1p5"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdp$SP_CODE
unique(sdi$tree)
sum(unique(sdp$SP_CODE) %in% unique(sdi$tree)) == length(unique(sdi$tree))
#example plot
plt <- "w1g1p6"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdp$SP_CODE
unique(sdi$tree)
sum(unique(sdp$SP_CODE) %in% unique(sdi$tree)) == length(unique(sdi$tree))
#example plot
plt <- "w1g2p1"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdp$SP_CODE
unique(sdi$tree)
sum(unique(sdp$SP_CODE) %in% unique(sdi$tree)) == length(unique(sdi$tree))
#example plot
plt <- "w1g2p2"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdp$SP_CODE
unique(sdi$tree)
sum(unique(sdp$SP_CODE) %in% unique(sdi$tree)) == length(unique(sdi$tree))
#example plot
plt <- "w1g2p3"
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdp$SP_CODE
unique(sdi$tree)
sum(unique(sdp$SP_CODE) %in% unique(sdi$tree)) == length(unique(sdi$tree))
# 1. Load datasets ----
insects <- read.table("datasets/wng_arthro_clean.txt")
sizes   <- read.table("datasets/wng_measurements.txt", header=T) # rsize is in cm
treats  <- read.table("datasets/treats_clean.txt")
plants  <- read.table("datasets/wng_main_bio.txt")
unique(insects$family)
1116+264+635
1116+264+635+143
insects <-  read.table("datasets/corrected_measurements.txt", header=T)
insects <-  read.csv("datasets/corrected_measurements.csv", header=T)
insects
# 1. Load datasets ----
insects <- read.table("datasets/wng_arthro_clean.txt")
# sizes   <- read.table("datasets/wng_measurements.txt", header=T) # rsize is in cm
treats  <- read.table("datasets/treats_clean.txt")
plants  <- read.table("datasets/wng_main_bio.txt")
sizes <-  read.csv("datasets/corrected_measurements.csv", header=T)
head(sizes)
# Size dataset, each morphotype's average size
size <- tapply(sizes$rsizecm, sizes$morph, mean)
warnings()
sizes[is.na(sizes),]
sizes$rsizecm <_ as.numeric(sizes$rsizecm)
sizes$rsizecm <- as.numeric(sizes$rsizecm)
# Size dataset, each morphotype's average size
size <- tapply(sizes$rsizecm, sizes$morph, mean)
size
sizes
sizes <-  read.csv("datasets/corrected_measurements.csv", header=T)
sizes$rsizecm <- as.numeric(as.character(sizes$rsizecm))
sizes
sizes[!complete.cases(sizes),]
sizes <-  read.csv("datasets/corrected_measurements.csv", header=T)
sizes$rsizecm <- as.numeric(as.character(sizes$rsizecm))
sizes[!complete.cases(sizes),]
sizes <-  read.csv("datasets/corrected_measurements.csv", header=T)
sizes$rsizecm <- as.numeric(as.character(sizes$rsizecm))
sizes[!complete.cases(sizes),]
# Size dataset, each morphotype's average size
size <- tapply(sizes$rsizecm, sizes$morph, mean)
sizes$rsizecm
sizes$morph
head(size)
head(sizes)
# Size dataset, each morphotype's average size
size <- tapply(sizes$r_cm_size, sizes$morph, mean)
size
mft <- names(size)
group <- substr(names(size),1,4)
size_dat <- data.frame(morph = mft,
size = as.numeric(size),
group = group)
# Power model parameters for each family
allo_params <- data.frame(group = unique(sizes$group),
a = c(-6.34,-2.13,-3.01,-3.20,-3.2 ,-3.17, -5.44),
b = c( 3.01, 2.23, 2.59, 2.35, 2.56, 2.61,  2.55))
# Size of an average individual
size_dat$a <- 0
size_dat$b <- 0
# Power model parameters for each family
allo_params <- data.frame(group = unique(sizes$group),
a = c(-6.34,-2.13,-3.01,-3.20,-3.2 ,-3.17, -5.44),
b = c( 3.01, 2.23, 2.59, 2.35, 2.56, 2.61,  2.55))
unique(sizes$group)
mft <- names(size)
group <- substr(names(size),1,4)
size_dat <- data.frame(morph = mft,
size = as.numeric(size),
group = group)
# Power model parameters for each family
allo_params <- data.frame(group = unique(sizes$group),
a = c(-6.34,-2.13,-3.01,-3.20,-3.2 ,-3.17, -5.44),
b = c( 3.01, 2.23, 2.59, 2.35, 2.56, 2.61,  2.55))
group
group <- substr(names(size),1,4)
size_dat <- data.frame(morph = mft,
size = as.numeric(size),
group = group)
size_dat
# Power model parameters for each family
allo_params <- data.frame(group = unique(size_dat$group),
a = c(-6.34,-2.13,-3.01,-3.20,-3.2 ,-3.17, -5.44),
b = c( 3.01, 2.23, 2.59, 2.35, 2.56, 2.61,  2.55))
allo_params
# Power model parameters for each family
allo_params <- data.frame(group = unique(size_dat$group),
a = c(-2.13,-3.2,-3.01,-3.20,-5.44,-6.34,-3.17),
b = c( 2.23,2.56, 2.59, 2.35, 2.55, 3.01, 2.61))
allo_params
# Size of an average individual
size_dat$a <- 0
size_dat$b <- 0
for (grp in unique(allo_params$group)){
aval <- allo_params[allo_params$group == grp, ]$a
bval <- allo_params[allo_params$group == grp, ]$b
size_dat[size_dat$group == grp, ]$a <- aval
size_dat[size_dat$group == grp, ]$b <- bval
}
size_dat$bio <- exp(size_dat$a) * size_dat$size^size_dat$b
library(ggplot2)
bio_dist <- ggplot(size_dat, aes(x = log(bio), fill=group))
bio_dist + geom_histogram(binwidth=0.5)
