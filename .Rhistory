# REESOLVED
# "w1g1p4"
examine("w1g1p4")
insects[(insects$tree == "trems1" & insects$plot == "w1g1p4"),  ]$tree <- "tremor"
#RESOLVED
# "w1g1p5"
examine("w1g1p5")[[3]][!(examine("w1g1p5")[[3]] %in% examine("w1g1p5")[[2]])]
insects[(insects$tree == "trems1" & insects$plot == "w1g1p5"),  ]$tree <- "tremor"
#RESOLVED
# "w1g2p2"
cd <- "w1g2p2"
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
plants[plants$CODE == cd, ]
insects[insects$plot == cd, ]
#???? macata viteco melamu
# "w1g2p3"
cd <- "w1g2p3"
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "trems1" & insects$plot == cd),  ]$tree <- "tremor"
plants[plants$CODE == cd, ]
insects[insects$plot == cd, ]
# ??? cordte
insects[(insects$tree == "ficuco" & insects$plot == cd),  ]$tree
# "w1g3p2"
cd <- "w1g3p2"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects$tree <- as.character(insects$tree)
# "w1g3p2"
cd <- "w1g3p2"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "ficuco" & insects$plot == cd),  ]$tree <- "ficucp"
examine(cd)
# "w1g3p3"
cd <- "w1g3p3"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "ficuco" & insects$plot == cd),  ]$tree <- "ficucp"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
# "w1g3p4"
cd <- "w1g3p4"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "ficucg" & insects$plot == cd),  ]$tree <- "ficuco"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
# "w1g3p6"
cd <- "w1g3p6"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "ficuco" & insects$plot == cd),  ]$tree <- "ficupa"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
examine(cd)
# "w1g4p6"
cd <- "w1g4p6"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
# "w1g4p6"
cd <- "w1g4p6"
examine(cd)
insects[!(insects$tree == "karipa"),  ]
insects <- insects[!(insects$tree == "karipa"),  ]
examine(cd)
# "w1g3p6"
cd <- "w1g3p6"
examine(cd)
# "w1g5p2"
cd <- "w1g5p2"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
# "w1g5p2"
cd <- "w1g5p2"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "solatu" & insects$plot == cd),  ]$tree <- "solas1"
insects[(insects$tree == "trems1" & insects$plot == cd),  ]$tree <- "tremor"
examine(cd)
# "w1g5p2"
cd <- "w1g5p2"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
# "w1g5p3"
cd <- "w1g5p3"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "premob" & insects$plot == cd),  ]$tree <- "prems1"
examine(cd)
# "w1g5p5"
cd <- "w1g5p5"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "ficucg" & insects$plot == cd),  ]$tree <- "ficuco"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
# "w1g6p4"
cd <- "w1g6p4"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
# "w1g5p5"
cd <- "w1g5p5"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
# Figure out where these plants are
plants[plants$SP_CODE ==  viteco, ]
# Figure out where these plants are
plants[plants$SP_CODE ==  "viteco", ]
# Figure out where these plants are
plants[plants$SP_CODE ==  "viteco", ]$CODE # ok... there is only oone place
plants[plants$SP_CODE ==  "macata", ]$CODE
plants[plants$SP_CODE ==  "macata", ]
plants[plants$SP_CODE ==  "melamu", ]$CODE
plants[plants$SP_CODE ==  "melamu", ]
plants[plants$SP_CODE ==  "cordte", ]$CODE
plants[plants$SP_CODE ==  "breyce", ]$CODE
plants[plants$SP_CODE ==  "piptar", ]$CODE
insects[(insects$tree %in% c("macata","viteco","melamu") & insects$plot == cd),  ]$plot
insects[(insects$tree %in% c("macata","viteco","melamu") & insects$plot == cd),  ]
# "w1g2p2"
cd <- "w1g2p2"
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
plants[plants$CODE == cd, ]
insects[insects$plot == cd, ]
insects$tree <- as.character(insects$tree)
insects[(insects$tree %in% c("macata","viteco","melamu") & insects$plot == cd),  ]$plot <- "w1g2p6"
# Script estimates biomasses of insects for each garden based on
# available lenght-body mass equation for insects.
# 1. Load datasets (built using data_processing_code.R) ----
insects <- read.table("datasets/wng_arthro_clean.txt")
treats  <- read.table("datasets/treats_clean.txt")
plants  <- read.table("datasets/wng_main_bio.txt")
sizes <-  read.csv("datasets/corrected_measurements.csv", header=T)
plants$SP_CODE <- tolower(plants$SP_CODE)
insects$tree <- as.character(insects$tree)
# Size dataset, each morphotype's average size
size <- tapply(sizes$r_cm_size, sizes$morph, mean)
mft <- names(size)
group <- substr(names(size),1,4)
size_dat <- data.frame(morph = mft,
size = as.numeric(size),
group = group)
# Models used to estimate biomass
# Ganihar 1997
# Araneae: power;b0=-3.2105 (0.1075);b1=2.4681(0.0756)
# Orthoptera: power;b0=-3.5338(0.2668);b1=2.4619(0.1002)
# Hemiptera: power;b0=-3.8893(0.3387);b1=2.7642(0.3113)
# Homoptera: power;b0=-3.1984(0.1174);b1=2.3487(0.0779)
# Coleoptera: power;b0=-3.2689(0.0659);b1=2.4625(0.0415)
# Wardhough
# (power model ln(weight) = ln(a) + b * length )
# weight <- exp(a) * size^b
# Mantodea:    a=-6.34(0.72);b=3.01(0.27)
# Araneae:     a=-2.13(0.15);b=2.23(0.11)
# Orthoptera:  a=-3.17(0.19);b=2.61(0.09)
# Hemiptera:   a=-3.01(0.17);b=2.59(0.09)
# Homoptera:   a=-3.20(0.12);b=2.35(0.08) (Ganihar 1997)
# Coleoptera:  a=-3.2(0.14); b=2.56(0.08)
# Lepidoptera: a=-5.44(); b=2.55
# Power model parameters for each family
allo_params <- data.frame(group = unique(size_dat$group),
a = c(-2.13,-3.2,-3.01,-3.20,-5.44,-6.34,-3.17),
b = c( 2.23,2.56, 2.59, 2.35, 2.55, 3.01, 2.61))
# Size of an average individual
size_dat$a <- 0
size_dat$b <- 0
for (grp in unique(allo_params$group)){
aval <- allo_params[allo_params$group == grp, ]$a
bval <- allo_params[allo_params$group == grp, ]$b
size_dat[size_dat$group == grp, ]$a <- aval
size_dat[size_dat$group == grp, ]$b <- bval
}
size_dat$bio <- exp(size_dat$a) * size_dat$size^size_dat$b
# Size distributions
library(ggplot2)
bio_dist <- ggplot(size_dat, aes(x = log(bio), fill=group))
bio_dist + geom_histogram(binwidth=0.5)
# Biomass based networks
# Corrections - species names
examine <- function(plt){
#example plot
sdp <- plants[plants$CODE == plt,]
# see which plants are in the same
sdi <- insects[insects$plot == plt, ]
sdp$SP_CODE
unique(sdi$tree)
# sdp[, c("WEIGHT","SP_CODE")]
bool <- sum(unique(sdp$SP_CODE) %in% unique(sdi$tree)) == length(unique(sdi$tree))
return(list(bool, sdp$SP_CODE, unique(sdi$tree)))
}
pcodes <- unique(plants$CODE)
plotnames <- c()
for(int in 1:length(pcodes)){
ee <- examine(as.character(pcodes[int]))
print(as.character(pcodes[int]))
print(ee[[1]])
if (ee[[1]] == FALSE){plotnames <- c(plotnames, as.character(pcodes[int]))}
}
# Names of plots where insect tree labels dont match ones from the plant dataset
plotnames
# w1g1p1
# what could this be?
examine("w1g1p1")
# insects[(insects$tree == "solatu" & insects$plot == "w1g1p1"), ]$tree # <- "melamu"
# it has to be melamu the most abundant on the plot
insects[(insects$tree == "trems1" & insects$plot == "w1g1p1"), ]$tree  <- "tremor"
#RESOLVED
# w1g1p2
# insects[insects$tree == "mimodi", ] #this doesn't appear in the plant dataset
# plants[plants$CODE == "w1g1p2", ]
# unique(plants$SPEC)
#
# # Check if there are othher plots with this plant
# plants[plants$SP_CODE == "breyce", ]
# insects[insects$tree == "breyce", ]
# insects[insects$tree == "tricpl", ]
# mimodi is either breyce or tricpl, I can also remove insects and the plant,
# or i can assign these insects to a second most abundant species which is
# tricpl (I will assign to tricpl)
examine("w1g1p2")
insects[(insects$tree == "mimodi" & insects$plot == "w1g1p2"), ]$tree <- "tricpl"
insects[(insects$tree == "trems1" & insects$plot == "w1g1p2"), ]$tree <- "tremor"
# RESOLVED
# w1g1p3
examine("w1g1p3")
insects[(insects$tree == "trems1" & insects$plot == "w1g1p3"), ]$tree <- "tremor"
# RESOLVED
# "w1g1p4"
examine("w1g1p4")
insects[(insects$tree == "trems1" & insects$plot == "w1g1p4"),  ]$tree <- "tremor"
# RESOLVED
# "w1g1p5"
examine("w1g1p5")[[3]][!(examine("w1g1p5")[[3]] %in% examine("w1g1p5")[[2]])]
insects[(insects$tree == "trems1" & insects$plot == "w1g1p5"),  ]$tree <- "tremor"
# RESOLVED
# "w1g3p2"
cd <- "w1g3p2"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
plants[plants$CODE == cd, ]
insects[insects$plot == cd, ]
insects[(insects$tree == "ficuco" & insects$plot == cd),  ]$tree <- "ficucp"
# RESOLVED
# "w1g3p3"
cd <- "w1g3p3"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "ficuco" & insects$plot == cd),  ]$tree <- "ficucp"
# RESOLVED
# "w1g3p4"
cd <- "w1g3p4"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "ficucg" & insects$plot == cd),  ]$tree <- "ficuco"
# RESOLVED
# "w1g3p6"
cd <- "w1g3p6"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "ficuco" & insects$plot == cd),  ]$tree <- "ficupa"
# RESOLVED
# "w1g4p6"
cd <- "w1g4p6"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects <- insects[!(insects$tree == "karipa"),  ]
# RESOLVED
# "w1g5p2"
cd <- "w1g5p2"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "solatu" & insects$plot == cd),  ]$tree <- "solas1"
insects[(insects$tree == "trems1" & insects$plot == cd),  ]$tree <- "tremor"
# RESOLVED
# "w1g5p3"
cd <- "w1g5p3"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "premob" & insects$plot == cd),  ]$tree <- "prems1"
# RESOLVED
# "w1g5p5"
cd <- "w1g5p5"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "ficucg" & insects$plot == cd),  ]$tree <- "ficuco"
# RESOLVED
# "w1g2p2"
cd <- "w1g2p2"
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
plants[plants$CODE == cd, ]
insects[insects$plot == cd, ]
plants[plants$CODE == cd, ]
plants[plants$SP_CODE == "viteco",]
insects[(insects$tree %in% c("macata","viteco","melamu") & insects$plot == cd),  ]$plot # <- "w1g2p6"
insects[(insects$tree %in% c("macata","viteco","melamu") & insects$plot == cd),  ]
insects[(insects$tree %in% c("macata","viteco","melamu") & insects$plot == cd),  ]$plot <- "w1g2p6"
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
examine(cd)
cd <- "w1g2p6"
examine(cd)
plants[plants$SP_CODE ==  "cordte", ]$CODE
plants[plants$SP_CODE ==  "breyce", ]$CODE
# "w1g6p4"
cd <- "w1g6p4"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "ficucg" & insects$plot == cd),  ]$tree <- "ficuco"
# "w1g6p4"
cd <- "w1g6p4"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
# how big of a deal is it?
insects[(insects$tree == %in% c("breyce", "piptar") & insects$plot == cd),  ]
# how big of a deal is it?
insects[(insects$tree %in% c("breyce", "piptar") & insects$plot == cd),  ]
# "w1g2p3"
cd <- "w1g2p3"
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree == "trems1" & insects$plot == cd),  ]$tree <- "tremor"
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
insects[(insects$tree %in% c("cordte") & insects$plot == cd),  ]
# definietly remove
insects <- insects[!(insects$tree == "cordte" & insects$plot == cd),  ]
# "w1g2p3"
cd <- "w1g2p3"
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
# "w1g6p4"
cd <- "w1g6p4"
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
# how big of a deal is it?
insects <- insects[!(insects$tree %in% c("breyce", "piptar") & insects$plot == cd),  ] #only few ind
examine(cd)
examine(cd)[[3]][!(examine(cd)[[3]] %in% examine(cd)[[2]])]
# 5. Network plots
library("bipartite")
cd <- "w1g5p5"
insects[insects$plot == cd]
insects[insects$plot == cd,]
size_dat
insplot <- insects[insects$plot == cd,]
# This function creates a contingency table for a given row category
# column categoory and sums values.
contingencyTable2 <- function(dataset, ROW, COL, VALUE){
# Get rid of the empty factors
dataset[, colnames(dataset) == ROW] <- as.character(dataset[, colnames(dataset) == ROW])
dataset[, colnames(dataset) == COL] <- as.character(dataset[, colnames(dataset) == COL])
# Make a table, get rid of the empty rows and columns
plants <- table(dataset[, colnames(dataset) == ROW], dataset[, colnames(dataset) == COL])
plants <- plants[rowSums(plants) != 0, colSums(plants) != 0]
# See where to insert values
allSpecCodes <- colnames(plants)
allPlotCodes <- rownames(plants)
entries <- which(plants != 0, arr.ind = TRUE)
# Loop through the entries and insert values
for (entry in 1:dim(entries)[1]){
plot <- entries[entry,1]
plant <- entries[entry,2]
specCode <- allSpecCodes[plant]
plotCode <- allPlotCodes[plot]
#res <- dataset[dataset$ROW == plotCode & dataset$COL == specCode,VALUE]
res <- dataset[dataset[,ROW] == plotCode & dataset[,COL] == specCode,VALUE]
# print(sum(res))
plants[plot,plant] <- sum(res, na.rm = TRUE)
}
plants[is.na(plants)] <- 0
# Change the table to a matrix or data.frame
mat_a <- matrix(0, nrow = dim(plants)[1], ncol = dim(plants)[2])
colnames(mat_a) <- colnames(plants)
rownames(mat_a) <- rownames(plants)
for (row in 1:dim(plants)[1]){
for (col in 1:dim(plants)[2])
mat_a[row,col] <- plants[row,col]
}
#return(plants)
return(mat_a)
}
contingencyTable2 <- function(dataset, ROW, COL, VALUE){
# Get rid of the empty factors
dataset[, colnames(dataset) == ROW] <- as.character(dataset[, colnames(dataset) == ROW])
dataset[, colnames(dataset) == COL] <- as.character(dataset[, colnames(dataset) == COL])
# Make a table, get rid of the empty rows and columns
plants <- table(dataset[, colnames(dataset) == ROW], dataset[, colnames(dataset) == COL])
plants <- plants[rowSums(plants) != 0, colSums(plants) != 0]
# See where to insert values
allSpecCodes <- colnames(plants)
allPlotCodes <- rownames(plants)
entries <- which(plants != 0, arr.ind = TRUE)
# Loop through the entries and insert values
for (entry in 1:dim(entries)[1]){
plot <- entries[entry,1]
plant <- entries[entry,2]
specCode <- allSpecCodes[plant]
plotCode <- allPlotCodes[plot]
#res <- dataset[dataset$ROW == plotCode & dataset$COL == specCode,VALUE]
res <- dataset[dataset[,ROW] == plotCode & dataset[,COL] == specCode,VALUE]
# print(sum(res))
plants[plot,plant] <- sum(res, na.rm = TRUE)
}
plants[is.na(plants)] <- 0
# Change the table to a matrix or data.frame
mat_a <- matrix(0, nrow = dim(plants)[1], ncol = dim(plants)[2])
colnames(mat_a) <- colnames(plants)
rownames(mat_a) <- rownames(plants)
for (row in 1:dim(plants)[1]){
for (col in 1:dim(plants)[2])
mat_a[row,col] <- plants[row,col]
}
#return(plants)
return(mat_a)
}
head(insplot)
insplotct <- contingencyTable2(insplot, "tree", "morphotype", "ammount")
plotweb(insplotct)
insplotct
insplotct <- contingencyTable2(insplot, "tree", "morphotype", "amount")
plotweb(insplotct)
# Data analysis ----
# Direct and indirect effects on plants can be calculated using the log ratio. ln(Vp+/Vp-) where V's are community variables (herbivore abundance and plant biomass in the presence and absence of herbivores). These effect magnitudes can be plotted in relation to each other on an x-y plane and in relation to a 45 deg reference line tha represents the equivalence in strength of direct and indirect effect of carnivores.
# The log ratio effect of carnivores on herbivores should always be negative if carnivores are limiting herbivores regardles of the of the way herbivores are resource limited.
# page 36 Resloving ecosystem complexity
# I need biomass of herbivores, arthropod predators and plant for each plot.
# Inspect that and see if there are any changes in the food web structure. What can i expect?
# 1. Load datesets ----
insects <- read.table("datasets/arthropods_clean.txt")
treats  <- read.table("datasets/treatments_clean.txt")
plants  <- read.table("datasets/plants_clean.txt")
size_dat <-read.table("datasets/size_dat_bio.txt")
# sizes   <- read.table("datasets/sizes_clean.txt")
## 2. Log response ratios ----
# Attach biomass measurments to othe main insects dataset
rownames(size_dat) <- size_dat$morph
arthbio  <- size_dat[as.character(insects$morphotype), ]
ins_bio <- cbind(insects, arthbio[, c("morph", "bio")])
ins_bio$totbio <- ins_bio$amount * ins_bio$bio
# ins_bio[1341,]
# Missing stuff, try to measure myself
# ins_bio[!complete.cases(ins_bio),]
# Plots with biomass
pcode <- "w1g5p1"
subinsdat <- ins_bio[ins_bio$plot == pcode,]
plantcodes <- unique(subinsdat$tree)
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
source("code/contingencyTable.R")
subinsct <- contingencyTable2(subinsdat, "tree", "family", "amount")
library("bipartite")
bipartite::plotweb(subinsct)
subinsct <- contingencyTable2(subinsdat, "tree", "family", "tot_bio")
subinsct <- contingencyTable2(subinsdat, "tree", "family", "totbio")
library("bipartite")
bipartite::plotweb(subinsct)
bipartite::plotweb(subinsct,low.abun = plantbio)
plantbio
bipartite::plotweb(subinsct,low.abun = plantbio[,2])
bipartite::plotweb(subinsct,low.abun = c(10,10,10,10,10,10))
rownames(plantbio) <- plantbio[,1]
plantb <- plantbio[,2]
plantb
names(plantb) <- plantbio[,1]
plantb
bipartite::plotweb(subinsct,low.abun = plantb)
# Data analysis ----
# Direct and indirect effects on plants can be calculated using the log ratio. ln(Vp+/Vp-) where V's are community variables (herbivore abundance and plant biomass in the presence and absence of herbivores). These effect magnitudes can be plotted in relation to each other on an x-y plane and in relation to a 45 deg reference line tha represents the equivalence in strength of direct and indirect effect of carnivores.
# The log ratio effect of carnivores on herbivores should always be negative if carnivores are limiting herbivores regardles of the of the way herbivores are resource limited.
# page 36 Resloving ecosystem complexity
# I need biomass of herbivores, arthropod predators and plant for each plot.
# Inspect that and see if there are any changes in the food web structure. What can i expect?
# 1. Load datesets ----
insects <- read.table("datasets/arthropods_clean.txt")
treats  <- read.table("datasets/treatments_clean.txt")
plants  <- read.table("datasets/plants_clean.txt")
size_dat <-read.table("datasets/size_dat_bio.txt")
# sizes   <- read.table("datasets/sizes_clean.txt")
## 2. Log response ratios ----
# Attach biomass measurments to othe main insects dataset
rownames(size_dat) <- size_dat$morph
arthbio  <- size_dat[as.character(insects$morphotype), ]
ins_bio <- cbind(insects, arthbio[, c("morph", "bio")])
ins_bio$totbio <- ins_bio$amount * ins_bio$bio
# ins_bio[1341,]
pcode <- "w1g5p1"
subinsdat <- ins_bio[ins_bio$plot == pcode,]
plantcodes <- unique(subinsdat$tree)
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
rownames(plantbio) <- plantbio[,1]
plantb <- plantbio[,2]
names(plantb) <- plantbio[,1]
source("code/contingencyTable.R")
subinsct <- contingencyTable2(subinsdat, "tree", "family", "totbio")
library("bipartite")
bipartite::plotweb(subinsct,low.abun = plantb)
colSums(subinsct)
bipartite::plotweb(subinsct,low.abun = plantb,
high.abun = colSums(subinsct))
networklevel()
networklevel(subinsct)
# Motifs
install.packages("iGraph")
# Motifs
install.packages("igraph")
install.packages("igraph")
# Motifs
library("igraph")
testGraph = barabasi.game(10,
m = 5,
power = 2,
out.pref = TRUE,
zero.appeal = 0.5,
directed = TRUE)
# Motifs
library("igraph")
