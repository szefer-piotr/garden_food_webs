gardnets <- list()
# Plots with biomass
for(pcode in as.character(treats$codes)){
print(pcode)
subinsdat <- ins_bio[ins_bio$plot == pcode,] # get insect biomass
plantcodes <- unique(subinsdat$tree) # see which plants have to be extracted
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
plantbio$SP_CODE <- as.character(plantbio$SP_CODE)
cumWeight <- tapply(plantbio$WEIGHT,
plantbio$SP_CODE,
sum)
pbio <- data.frame(SP_CODE = rownames(cumWeight),
WEIGHT = cumWeight)
rownames(pbio) <- pbio[,1]
plantb <- pbio[,2]
names(plantb) <- pbio[,1]
subinsct <- contingencyTable2(subinsdat, "tree", "family", "totbio",FALSE)
# Add to the list
subinsctsp <- contingencyTable2(subinsdat, "tree", "morph", "totbio",FALSE)
gardnets <- append(gardnets, list(subinsctsp))
subdf <- data.frame()
# Collect data for a given plant within a plot
for(row in 1:nrow(subinsct)){
plnm <- rownames(subinsct)[row]
nms <- rownames(as.matrix(subinsct[row,]))
if(is.null(nms)){nms <- colnames(subinsct)}
bio <- as.matrix(subinsct[row,])
trt <- as.character(treats[treats$codes == pcode, "treat"])
plbio <- pbio[pbio$SP_CODE == plnm, "WEIGHT"]
ssdf <- data.frame(plot=pcode,bio=bio, nms=nms, plnm=plnm,
trt=trt,plbio=plbio)
subdf <- rbind(subdf, ssdf)
}
biofulldf <- rbind(biofulldf, subdf)
}
# Dataset containing biomasses for the log ratio comparisons
biollcp <- biofulldf[biofulldf$trt %in% c("CONTROL", "PREDATOR"),]
biofulldf
gardnets
source("code/bio_log_ratio.R")
gardnets
logratiodf
# Dataset containing biomasses for the log ratio comparisons
biollcp <- biofulldf[biofulldf$trt %in% c("CONTROL", "PREDATOR"),]
biollcp$plot <- as.character(biollcp$plot)
biollcp$plnm <- as.character(biollcp$plnm)
biollcp$trt <- as.character(biollcp$trt)
table(biollcp$trt, biollcp$plnm)
biollcp$gard <- substr(biollcp$plot, 3,4)
block = "g1"
plnt = unique(subbl$plnm)[1]
fam = unique(subblpl$nms)[1]
logratiodf
source("code/contingencyTable.R")
library("bipartite")
library("igraph")
insects <- read.table("datasets/arthropods_clean.txt")
treats  <- read.table("datasets/treatments_clean.txt")
plants  <- read.table("datasets/plants_clean.txt")
size_dat <-read.table("datasets/size_dat_bio.txt")
# Attach biomass measurments to othe main insects dataset
rownames(size_dat) <- size_dat$morph
arthbio  <- size_dat[as.character(insects$morphotype), ]
ins_bio <- cbind(insects, arthbio[, c("morph", "bio")])
ins_bio$totbio <- ins_bio$amount * ins_bio$bio
# Insect abundances
tapply(ins_bio$amount,ins_bio$plot, sum)
ins_bio[ins_bio$plot == pcode,]
# Biomasses of insects per plot per plant
biofulldf <- data.frame()
gardnets <- list()
# Plots with biomass
for(pcode in as.character(treats$codes)){
print(pcode)
subinsdat <- ins_bio[ins_bio$plot == pcode,] # get insect biomass
plantcodes <- unique(subinsdat$tree) # see which plants have to be extracted
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
plantbio$SP_CODE <- as.character(plantbio$SP_CODE)
cumWeight <- tapply(plantbio$WEIGHT,
plantbio$SP_CODE,
sum)
pbio <- data.frame(SP_CODE = rownames(cumWeight),
WEIGHT = cumWeight)
rownames(pbio) <- pbio[,1]
plantb <- pbio[,2]
names(plantb) <- pbio[,1]
subinsct <- contingencyTable2(subinsdat, "tree", "family", "totbio",FALSE)
# Add to the list
subinsctsp <- contingencyTable2(subinsdat, "tree", "morph", "totbio",FALSE)
gardnets <- append(gardnets, list(subinsctsp))
subdf <- data.frame()
# Collect data for a given plant within a plot
for(row in 1:nrow(subinsct)){
plnm <- rownames(subinsct)[row]
nms <- rownames(as.matrix(subinsct[row,]))
if(is.null(nms)){nms <- colnames(subinsct)}
bio <- as.matrix(subinsct[row,])
trt <- as.character(treats[treats$codes == pcode, "treat"])
plbio <- pbio[pbio$SP_CODE == plnm, "WEIGHT"]
ssdf <- data.frame(plot=pcode,bio=bio, nms=nms, plnm=plnm,
trt=trt,plbio=plbio)
subdf <- rbind(subdf, ssdf)
}
biofulldf <- rbind(biofulldf, subdf)
}
# Dataset containing biomasses for the log ratio comparisons
biollcp <- biofulldf[biofulldf$trt %in% c("CONTROL", "PREDATOR"),]
biollcp$plot <- as.character(biollcp$plot)
biollcp$plnm <- as.character(biollcp$plnm)
biollcp$trt <- as.character(biollcp$trt)
table(biollcp$trt, biollcp$plnm)
biofulldf
# gardnets - networks in individual plots
# biofulldf biomass of all insects and trees
as.character(treats$codes)
list(x = c("marshmallow", "pea"))
append(x, y = c(10,20))
append(x, list(y = c(10,20)))
list(x = c("marshmallow", "pea")) -> lx
append(lx, list(y = c(10,20)))
source("code/bio_log_ratio.R")
# biollcp$gard <- substr(biollcp$plot, 3,4)
#
# block = "g1"
# plnt = unique(subbl$plnm)[1]
# fam = unique(subblpl$nms)[1]
#
logratiodf <- data.frame()
# Go through each block
for(block in unique(biollcp$gard)){
subbl <- biollcp[biollcp$gard == block, ]
# within each block obtain community for each plant species
for(plnt in unique(subbl$plnm)){
subblpl <- subbl[subbl$plnm == plnt, ]
subblpl$nms <- as.character(subblpl$nms)
subpllr <- tapply(subblpl$plbio, subblpl$trt, mean)
pltlr <- log(subpllr["CONTROL"]/subpllr["PREDATOR"])
if(is.na(pltlr)){next}
arthrodf <- data.frame()
print(plnt)
for(fam in unique(subblpl$nms)){
famsub <- subblpl[subblpl$nms == fam, c("bio","trt")]
cont <- famsub[famsub$trt == "CONTROL",]$bio
pred <- famsub[famsub$trt == "PREDATOR",]$bio
famlr <- log(cont/pred)
if(length(famlr) == 0){next}
print(fam)
print(famlr)
arthrodf<- rbind(arthrodf, data.frame(plnt=plnt,fam=fam, lr=famlr,
pltlr=pltlr, gard=block))
}
}
logratiodf <- rbind(logratiodf, arthrodf)
}
logratiodf
source("code/bio_log_ratio.R")
# gardnets - networks in individual plots
# biofulldf biomass of all insects and trees
as.character(treats$codes)
gardnets
paste(pcode)
# Biomasses of insects per plot per plant
biofulldf <- data.frame()
gardnets <- list()
# Plots with biomass
for(pcode in as.character(treats$codes)){
print(pcode)
subinsdat <- ins_bio[ins_bio$plot == pcode,] # get insect biomass
plantcodes <- unique(subinsdat$tree) # see which plants have to be extracted
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
plantbio$SP_CODE <- as.character(plantbio$SP_CODE)
cumWeight <- tapply(plantbio$WEIGHT,
plantbio$SP_CODE,
sum)
pbio <- data.frame(SP_CODE = rownames(cumWeight),
WEIGHT = cumWeight)
rownames(pbio) <- pbio[,1]
plantb <- pbio[,2]
names(plantb) <- pbio[,1]
subinsct <- contingencyTable2(subinsdat, "tree", "family", "totbio",FALSE)
# Add to the list
subinsctsp <- contingencyTable2(subinsdat, "tree", "morph", "totbio",FALSE)
gardnets <- append(gardnets, list(paste(pcode) = subinsctsp))
subdf <- data.frame()
# Collect data for a given plant within a plot
for(row in 1:nrow(subinsct)){
plnm <- rownames(subinsct)[row]
nms <- rownames(as.matrix(subinsct[row,]))
if(is.null(nms)){nms <- colnames(subinsct)}
bio <- as.matrix(subinsct[row,])
trt <- as.character(treats[treats$codes == pcode, "treat"])
plbio <- pbio[pbio$SP_CODE == plnm, "WEIGHT"]
ssdf <- data.frame(plot=pcode,bio=bio, nms=nms, plnm=plnm,
trt=trt,plbio=plbio)
subdf <- rbind(subdf, ssdf)
}
biofulldf <- rbind(biofulldf, subdf)
}
# Biomasses of insects per plot per plant
biofulldf <- data.frame()
gardnets <- list()
# Plots with biomass
for(pcode in as.character(treats$codes)){
print(pcode)
subinsdat <- ins_bio[ins_bio$plot == pcode,] # get insect biomass
plantcodes <- unique(subinsdat$tree) # see which plants have to be extracted
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
plantbio$SP_CODE <- as.character(plantbio$SP_CODE)
cumWeight <- tapply(plantbio$WEIGHT,
plantbio$SP_CODE,
sum)
pbio <- data.frame(SP_CODE = rownames(cumWeight),
WEIGHT = cumWeight)
rownames(pbio) <- pbio[,1]
plantb <- pbio[,2]
names(plantb) <- pbio[,1]
subinsct <- contingencyTable2(subinsdat, "tree", "family", "totbio",FALSE)
# Add to the list
subinsctsp <- contingencyTable2(subinsdat, "tree", "morph", "totbio",FALSE)
gardnets <- append(gardnets, list(pcode = subinsctsp))
subdf <- data.frame()
# Collect data for a given plant within a plot
for(row in 1:nrow(subinsct)){
plnm <- rownames(subinsct)[row]
nms <- rownames(as.matrix(subinsct[row,]))
if(is.null(nms)){nms <- colnames(subinsct)}
bio <- as.matrix(subinsct[row,])
trt <- as.character(treats[treats$codes == pcode, "treat"])
plbio <- pbio[pbio$SP_CODE == plnm, "WEIGHT"]
ssdf <- data.frame(plot=pcode,bio=bio, nms=nms, plnm=plnm,
trt=trt,plbio=plbio)
subdf <- rbind(subdf, ssdf)
}
biofulldf <- rbind(biofulldf, subdf)
}
# Biomasses of insects per plot per plant
biofulldf <- data.frame()
gardnets <- list()
# Plots with biomass
for(pcode in as.character(treats$codes)){
print(pcode)
subinsdat <- ins_bio[ins_bio$plot == pcode,] # get insect biomass
plantcodes <- unique(subinsdat$tree) # see which plants have to be extracted
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
plantbio$SP_CODE <- as.character(plantbio$SP_CODE)
cumWeight <- tapply(plantbio$WEIGHT,
plantbio$SP_CODE,
sum)
pbio <- data.frame(SP_CODE = rownames(cumWeight),
WEIGHT = cumWeight)
rownames(pbio) <- pbio[,1]
plantb <- pbio[,2]
names(plantb) <- pbio[,1]
subinsct <- contingencyTable2(subinsdat, "tree", "family", "totbio",FALSE)
# Add to the list
subinsctsp <- contingencyTable2(subinsdat, "tree", "morph", "totbio",FALSE)
gardnets <- append(gardnets, list(paste(pcode) = subinsctsp))
subdf <- data.frame()
# Collect data for a given plant within a plot
for(row in 1:nrow(subinsct)){
plnm <- rownames(subinsct)[row]
nms <- rownames(as.matrix(subinsct[row,]))
if(is.null(nms)){nms <- colnames(subinsct)}
bio <- as.matrix(subinsct[row,])
trt <- as.character(treats[treats$codes == pcode, "treat"])
plbio <- pbio[pbio$SP_CODE == plnm, "WEIGHT"]
ssdf <- data.frame(plot=pcode,bio=bio, nms=nms, plnm=plnm,
trt=trt,plbio=plbio)
subdf <- rbind(subdf, ssdf)
}
biofulldf <- rbind(biofulldf, subdf)
}
# Biomasses of insects per plot per plant
biofulldf <- data.frame()
gardnets <- list()
# Plots with biomass
for(pcode in as.character(treats$codes)){
print(pcode)
subinsdat <- ins_bio[ins_bio$plot == pcode,] # get insect biomass
plantcodes <- unique(subinsdat$tree) # see which plants have to be extracted
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
plantbio$SP_CODE <- as.character(plantbio$SP_CODE)
cumWeight <- tapply(plantbio$WEIGHT,
plantbio$SP_CODE,
sum)
pbio <- data.frame(SP_CODE = rownames(cumWeight),
WEIGHT = cumWeight)
rownames(pbio) <- pbio[,1]
plantb <- pbio[,2]
names(plantb) <- pbio[,1]
subinsct <- contingencyTable2(subinsdat, "tree", "family", "totbio",FALSE)
# Add to the list
subinsctsp <- contingencyTable2(subinsdat, "tree", "morph", "totbio",FALSE)
nm <- paste(pcode)
gardnets <- append(gardnets, list(nm = subinsctsp))
subdf <- data.frame()
# Collect data for a given plant within a plot
for(row in 1:nrow(subinsct)){
plnm <- rownames(subinsct)[row]
nms <- rownames(as.matrix(subinsct[row,]))
if(is.null(nms)){nms <- colnames(subinsct)}
bio <- as.matrix(subinsct[row,])
trt <- as.character(treats[treats$codes == pcode, "treat"])
plbio <- pbio[pbio$SP_CODE == plnm, "WEIGHT"]
ssdf <- data.frame(plot=pcode,bio=bio, nms=nms, plnm=plnm,
trt=trt,plbio=plbio)
subdf <- rbind(subdf, ssdf)
}
biofulldf <- rbind(biofulldf, subdf)
}
biofulldf
gardnets
# Biomasses of insects per plot per plant
biofulldf <- data.frame()
gardnets <- list()
# Plots with biomass
for(pcode in as.character(treats$codes)){
print(pcode)
subinsdat <- ins_bio[ins_bio$plot == pcode,] # get insect biomass
plantcodes <- unique(subinsdat$tree) # see which plants have to be extracted
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
plantbio$SP_CODE <- as.character(plantbio$SP_CODE)
cumWeight <- tapply(plantbio$WEIGHT,
plantbio$SP_CODE,
sum)
pbio <- data.frame(SP_CODE = rownames(cumWeight),
WEIGHT = cumWeight)
rownames(pbio) <- pbio[,1]
plantb <- pbio[,2]
names(plantb) <- pbio[,1]
subinsct <- contingencyTable2(subinsdat, "tree", "family", "totbio",FALSE)
# Add to the list
subinsctsp <- contingencyTable2(subinsdat, "tree", "morph", "totbio",FALSE)
gardnets <- append(gardnets, list(subinsctsp))
subdf <- data.frame()
# Collect data for a given plant within a plot
for(row in 1:nrow(subinsct)){
plnm <- rownames(subinsct)[row]
nms <- rownames(as.matrix(subinsct[row,]))
if(is.null(nms)){nms <- colnames(subinsct)}
bio <- as.matrix(subinsct[row,])
trt <- as.character(treats[treats$codes == pcode, "treat"])
plbio <- pbio[pbio$SP_CODE == plnm, "WEIGHT"]
ssdf <- data.frame(plot=pcode,bio=bio, nms=nms, plnm=plnm,
trt=trt,plbio=plbio)
subdf <- rbind(subdf, ssdf)
}
biofulldf <- rbind(biofulldf, subdf)
}
gardnets
pcode
names(gardnets)
names(gardnets)[36] <- pcode
names(gardnets)
lx
append(lx, list(y = c(10,20)))
lx
lx <- append(lx, list(y = c(10,20)))
lx
lx[[-1]]
names(lx)
names(lx)[-1]
lo <- list(h = c("sd","cd"))
names(lo)[-1]
# Biomasses of insects per plot per plant
biofulldf <- data.frame()
gardnets <- list()
# Plots with biomass
for(pcode in as.character(treats$codes)){
print(pcode)
subinsdat <- ins_bio[ins_bio$plot == pcode,] # get insect biomass
plantcodes <- unique(subinsdat$tree) # see which plants have to be extracted
plantbio <- plants[(plants$CODE == pcode & plants$SP_CODE %in% plantcodes), c("SP_CODE","WEIGHT")] # in KG
plantbio$SP_CODE <- as.character(plantbio$SP_CODE)
cumWeight <- tapply(plantbio$WEIGHT,
plantbio$SP_CODE,
sum)
pbio <- data.frame(SP_CODE = rownames(cumWeight),
WEIGHT = cumWeight)
rownames(pbio) <- pbio[,1]
plantb <- pbio[,2]
names(plantb) <- pbio[,1]
subinsct <- contingencyTable2(subinsdat, "tree", "family", "totbio",FALSE)
# Add to the list
subinsctsp <- contingencyTable2(subinsdat, "tree", "morph", "totbio",FALSE)
listnet <- list(subinsctsp)
names(listnet) <- pcode
gardnets <- append(gardnets, listnet)
subdf <- data.frame()
# Collect data for a given plant within a plot
for(row in 1:nrow(subinsct)){
plnm <- rownames(subinsct)[row]
nms <- rownames(as.matrix(subinsct[row,]))
if(is.null(nms)){nms <- colnames(subinsct)}
bio <- as.matrix(subinsct[row,])
trt <- as.character(treats[treats$codes == pcode, "treat"])
plbio <- pbio[pbio$SP_CODE == plnm, "WEIGHT"]
ssdf <- data.frame(plot=pcode,bio=bio, nms=nms, plnm=plnm,
trt=trt,plbio=plbio)
subdf <- rbind(subdf, ssdf)
}
biofulldf <- rbind(biofulldf, subdf)
}
gardnets
names(gardnets)
source("code/bio_log_ratio.R")
# gardnets - networks in individual plots
# biofulldf biomass of all insects and trees
as.character(treats$codes)
# gardnets - networks in individual plots
# biofulldf biomass of all insects and trees
gnames <- as.character(treats$codes)
gname <- gnames[1]
gname
networklevel(gardnets[[gname]])
?networklevel
networklevel(gardnets[[gname]], index = "vulnerability")
genvuldf <- data.frame()
nlres <- networklevel(gardnets[[gname]], index = "vulnerability")
nlser
nlres
nlres[1]
# Simple vulnerability and generality patterns in networks
gnames <- as.character(treats$codes)
genvuldf <- data.frame()
for(gname in gnames){
nlres <- networklevel(gardnets[[gname]], index = "vulnerability")
subgvdf <- data.frame(plot = gname, gen = nlres[1], vul = nlres[2])
genvuldf <- rbind(genvuldf, subgvdf)
}
# Simple vulnerability and generality patterns in networks
gnames <- as.character(treats$codes)
genvuldf <- data.frame()
for(gname in gnames){
print(gname)
nlres <- networklevel(gardnets[[gname]], index = "vulnerability")
subgvdf <- data.frame(plot = gname, gen = nlres[1], vul = nlres[2])
genvuldf <- rbind(genvuldf, subgvdf)
}
gardnets[[gname]]
tt <- try(networklevel(gardnets[[gname]]))
tt
ifelse(is(tt,"try-error"),"There was a warning or an error","OK")
tt <- try(networklevel(gardnets[[gnames[1]]]))
tt <- try(networklevel(gardnets[[gnames[1]]], index = "vulnerability"))
ifelse(is(tt,"try-error"),"There was a warning or an error","OK")
tt <- try(networklevel(gardnets[[gnames[2]]], index = "vulnerability"))
ifelse(is(tt,"try-error"),"There was a warning or an error","OK")
tt <- try(networklevel(gardnets[[gnames[3]]], index = "vulnerability"))
ifelse(is(tt,"try-error"),"There was a warning or an error","OK")
tt <- try(networklevel(gardnets[[gnames[4]]], index = "vulnerability"))
ifelse(is(tt,"try-error"),"There was a warning or an error","OK")
tt <- try(networklevel(gardnets[[gnames[5]]], index = "vulnerability"))
ifelse(is(tt,"try-error"),"There was a warning or an error","OK")
tt <- try(networklevel(gardnets[[gnames[6]]], index = "vulnerability"))
ifelse(is(tt,"try-error"),"There was a warning or an error","OK")
g
tt <- try(networklevel(gardnets[[gnames[6]]], index = "vulnerability"))
ifelse(is(tt,"try-error"),"There was a warning or an error","OK")
ifelse(is(tt,"warning"),"There was a warning or an error","OK")
tt <- try(networklevel(gardnets[[gnames[6]]], index = "vulnerability"))
ifelse(is(tt,"warning"),"There was a warning or an error","OK")
tt
tt <- tryCatch(networklevel(gardnets[[gnames[6]]], index = "vulnerability"),error=function(e) e, warning=function(w) w)
ifelse(is(tt,"warning"),"There was a warning or an error","OK")
# Simple vulnerability and generality patterns in networks
gnames <- as.character(treats$codes)
genvuldf <- data.frame()
for(gname in gnames){
print(gname)
nlres <- networklevel(gardnets[[gname]], index = "vulnerability")
tt <- tryCatch(networklevel(gardnets[[gnames[6]]], index = "vulnerability"),error=function(e) e, warning=function(w) w)
ifelse(is(tt,"warning"),next,"OK")
subgvdf <- data.frame(plot = gname, gen = nlres[1], vul = nlres[2])
genvuldf <- rbind(genvuldf, subgvdf)
}
genvuldf
# Simple vulnerability and generality patterns in networks
gnames <- as.character(treats$codes)
genvuldf <- data.frame()
for(gname in gnames){
print(gname)
nlres <- networklevel(gardnets[[gname]], index = "vulnerability")
subgvdf <- data.frame(plot = gname, gen = nlres[1], vul = nlres[2])
genvuldf <- rbind(genvuldf, subgvdf)
}
genvuldf
tt <- tryCatch(networklevel(gardnets[[gnames[6]]], index = "vulnerability"),error=function(e) e, warning=function(w) w)
# Simple vulnerability and generality patterns in networks
gnames <- as.character(treats$codes)
genvuldf <- data.frame()
for(gname in gnames){
print(gname)
nlres <- networklevel(gardnets[[gname]], index = "vulnerability")
tt <- tryCatch(networklevel(gardnets[[gnames[gname]]], index = "vulnerability"),error=function(e) e, warning=function(w) w)
ifelse(is(tt,"warning"),next,"OK")
subgvdf <- data.frame(plot = gname, gen = nlres[1], vul = nlres[2])
genvuldf <- rbind(genvuldf, subgvdf)
}
genvuldf
treats
rownames(treats) <- treats$codes
genvuldf$trt <- treats[genvuldf$plot, ]$treat
genvuldf
genvuldf$block <- substr(genvuldf$plot, 3,4)
genvuldf
library(ggplot2)
head(genvuldf)
p <- ggplot(genvuldf, aes(x = trt, y = vul, col = block))
p + geom_point()
p <- ggplot(genvuldf, aes(x = trt, y = gen, col = block))
p + geom_point()
